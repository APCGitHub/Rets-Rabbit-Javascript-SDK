{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///rets_rabbit.umd.min.js","webpack:///webpack/bootstrap dbd5a894ae2d83793b8a","webpack:///./src/rets_rabbit.js","webpack:///./src/core/index.js","webpack:///./src/core/utils/token-storage.js","webpack:///./~/component-emitter/index.js","webpack:///./~/superagent/lib/client.js","webpack:///./~/superagent/lib/is-object.js","webpack:///./src/core/helpers/build-url.js","webpack:///./src/core/helpers/superagent-handle-response.js","webpack:///./src/core/lib/post.js","webpack:///./~/domready/ready.js","webpack:///./~/reduce-component/index.js","webpack:///./~/superagent/lib/request-base.js","webpack:///./~/superagent/lib/request.js","webpack:///./src/core/lib/auth.js","webpack:///./src/core/lib/get.js","webpack:///./src/core/utils/extend.js"],"names":["root","factory","exports","module","define","amd","this","modules","__webpack_require__","moduleId","installedModules","id","loaded","call","m","c","p","RetsRabbit","extend","prototype","post","get","auth","storage","utils","domready","setTimeout","emit","config","configure","Emitter","debug","cfg","clientId","client_id","clientSecret","client_secret","host","url","storageKey","token_key","on","log","str","arguments","length","String","message","window","console","ready","cb","once","localStorage","getToken","key","getItem","setToken","token","setItem","obj","mixin","addEventListener","event","fn","_callbacks","push","off","apply","removeListener","removeAllListeners","removeEventListener","callbacks","i","splice","args","slice","len","listeners","hasListeners","noop","serialize","isObject","pairs","pushEncodedKeyValuePair","join","val","Array","isArray","forEach","v","subkey","encodeURIComponent","parseString","pair","pos","split","indexOf","decodeURIComponent","parseHeader","index","line","field","lines","fields","pop","toLowerCase","trim","isJSON","mime","test","type","shift","params","reduce","parts","Response","req","options","xhr","text","method","responseType","responseText","statusText","_setStatusProperties","status","header","headers","getAllResponseHeaders","getResponseHeader","_setHeaderProperties","body","_parseBody","response","Request","self","_query","_header","err","res","e","Error","parse","original","rawResponse","statusCode","callback","new_err","del","request","end","requestBase","bind","getXHR","XMLHttpRequest","location","protocol","ActiveXObject","s","replace","serializeObject","types","html","json","xml","urlencoded","form","form-data","application/x-www-form-urlencoded","application/json","JSON","stringify","ct","Object","statusType","info","ok","clientError","serverError","error","toError","accepted","noContent","badRequest","unauthorized","notAcceptable","notFound","forbidden","msg","set","_responseType","accept","user","pass","btoa","username","password","query","attach","file","filename","_getFormData","append","name","_formData","FormData","_callback","clearTimeout","crossDomainError","crossDomain","_timeoutError","timeout","_timeout","_appendQueryString","data","_data","onreadystatechange","readyState","timedout","_aborted","handleProgress","total","percent","direction","onprogress","upload","_timer","abort","open","_withCredentials","withCredentials","_isHost","contentType","_serializer","setRequestHeader","send","head","patch","put","domain","target","substr","is_err","error_code","code","handleResponse","r","definition","listener","fns","doc","document","hack","documentElement","doScroll","domContentLoaded","arr","initial","idx","curr","_parser","ms","then","resolve","reject","_fullfilledPromise","Promise","innerResolve","innerReject","use","getHeader","unset","redirects","n","_maxRedirects","toJSON","toString","RequestConstructor","urlBuilder","Storage","grant_type","t","access_token","this_token","_url","prop"],"mappings":"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","file":"rets_rabbit.umd.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"RetsRabbit\"] = factory();\n\telse\n\t\troot[\"RetsRabbit\"] = factory();\n})(this, function() {\nreturn \n\n\n/** WEBPACK FOOTER **\n ** webpack/universalModuleDefinition\n **/","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"RetsRabbit\"] = factory();\n\telse\n\t\troot[\"RetsRabbit\"] = factory();\n})(this, function() {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar RetsRabbit = __webpack_require__(1),\n\t    extend = __webpack_require__(15);\n\t\n\textend(RetsRabbit.prototype, {\n\t    \"post\": __webpack_require__(8),\n\t    \"get\": __webpack_require__(14),\n\t    \"auth\": __webpack_require__(13),\n\t    \"storage\": __webpack_require__(2)\n\t});\n\t\n\tRetsRabbit.utils = {\n\t    \"extend\": extend,\n\t    \"domready\": __webpack_require__(9)\n\t};\n\t\n\tif(RetsRabbit.loaded){\n\t    setTimeout(function () {\n\t        RetsRabbit.utils.domready(function () {\n\t            RetsRabbit.emit('ready');\n\t        });\n\t    }, 0);\n\t}\n\t\n\tmodule.exports = RetsRabbit;\n\n/***/ },\n/* 1 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Created by aclinton on 7/11/16.\n\t */\n\tvar Emitter = __webpack_require__(3)\n\t\n\tfunction RetsRabbit(config){\n\t    this.configure(config);\n\t}\n\t\n\tRetsRabbit.debug = true;\n\tRetsRabbit.loaded = true;\n\t\n\t//Set up emitter\n\tEmitter(RetsRabbit);\n\tEmitter(RetsRabbit.prototype);\n\t\n\tRetsRabbit.prototype.configure = function (cfg) {\n\t    var config = cfg || {};\n\t\n\t    this.config = {\n\t        clientId: config.client_id || 'retsrabbit',\n\t        clientSecret: config.client_secret || 'retsrabbit',\n\t        host: config.host || 'https',\n\t        url: config.url || 'stage.retsrabbit.com/api',\n\t        storageKey: config.token_key || 'access_token'\n\t    };\n\t\n\t    if (RetsRabbit.debug) {\n\t        this.on('error', RetsRabbit.log);\n\t    }\n\t\n\t    this.emit('ready');\n\t};\n\t\n\tRetsRabbit.prototype.clientId = function(str){\n\t    if (!arguments.length) return this.config.clientId;\n\t    this.config.clientId = (str ? String(str) : null);\n\t    return this;\n\t};\n\t\n\tRetsRabbit.prototype.clientSecret = function(str){\n\t    if (!arguments.length) return this.config.clientSecret;\n\t    this.config.clientSecret = (str ? String(str) : null);\n\t    return this;\n\t};\n\t\n\tRetsRabbit.prototype.host = function(str){\n\t    if (!arguments.length) return this.config.host;\n\t    this.config.host = (str ? String(str) : null);\n\t    return this;\n\t};\n\t\n\tRetsRabbit.prototype.url = function(str){\n\t    if (!arguments.length) return this.config.url;\n\t    this.config.url = (str ? String(str) : null);\n\t    return this;\n\t};\n\t\n\tRetsRabbit.prototype.storageKey = function(str){\n\t    if (!arguments.length) return this.config.storageKey;\n\t    this.config.storageKey = (str ? String(str) : null);\n\t    return this;\n\t};\n\t\n\tRetsRabbit.log = function (message) {\n\t    if(RetsRabbit.debug && window.console){\n\t        console.log('[Rets Rabbit] ' + message);\n\t    }\n\t};\n\t\n\tRetsRabbit.ready = function (cb) {\n\t    if(RetsRabbit.loaded){\n\t        cb();\n\t    } else {\n\t        RetsRabbit.once('ready', cb);\n\t    }\n\t};\n\t\n\tmodule.exports = RetsRabbit;\n\n/***/ },\n/* 2 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Created by aclinton on 7/13/16.\n\t */\n\tvar localStorage = null;\n\tvar RetsRabbit = __webpack_require__(1);\n\t\n\tif (typeof (Storage) !== void(0)) {\n\t    localStorage = window.localStorage;\n\t}\n\t\n\tmodule.exports = {\n\t    'getToken': function (key) {\n\t        if(localStorage == null) {\n\t            RetsRabbit.log(\"Local Storage is not supported by your browser\");\n\t            return;\n\t        }\n\t\n\t        if(!arguments.length)\n\t            key = this.config.storageKey;\n\t\n\t        return localStorage.getItem(key);\n\t    },\n\t    'setToken': function (key, token) {\n\t        if(localStorage == null) {\n\t            RetsRabbit.log(\"Local Storage is not supported by your browser\");\n\t            return;\n\t        }\n\t\n\t        if(arguments.length < 2) {\n\t            RetsRabbit.log(\"You need to supply both the key and token\");\n\t            return this;\n\t        }\n\t\n\t        if(key == null)\n\t            key = this.config.storageKey;\n\t\n\t        localStorage.setItem(key, token);\n\t\n\t        return;\n\t    }\n\t}\n\n\n/***/ },\n/* 3 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\r\n\t/**\r\n\t * Expose `Emitter`.\r\n\t */\r\n\t\r\n\tif (true) {\r\n\t  module.exports = Emitter;\r\n\t}\r\n\t\r\n\t/**\r\n\t * Initialize a new `Emitter`.\r\n\t *\r\n\t * @api public\r\n\t */\r\n\t\r\n\tfunction Emitter(obj) {\r\n\t  if (obj) return mixin(obj);\r\n\t};\r\n\t\r\n\t/**\r\n\t * Mixin the emitter properties.\r\n\t *\r\n\t * @param {Object} obj\r\n\t * @return {Object}\r\n\t * @api private\r\n\t */\r\n\t\r\n\tfunction mixin(obj) {\r\n\t  for (var key in Emitter.prototype) {\r\n\t    obj[key] = Emitter.prototype[key];\r\n\t  }\r\n\t  return obj;\r\n\t}\r\n\t\r\n\t/**\r\n\t * Listen on the given `event` with `fn`.\r\n\t *\r\n\t * @param {String} event\r\n\t * @param {Function} fn\r\n\t * @return {Emitter}\r\n\t * @api public\r\n\t */\r\n\t\r\n\tEmitter.prototype.on =\r\n\tEmitter.prototype.addEventListener = function(event, fn){\r\n\t  this._callbacks = this._callbacks || {};\r\n\t  (this._callbacks['$' + event] = this._callbacks['$' + event] || [])\r\n\t    .push(fn);\r\n\t  return this;\r\n\t};\r\n\t\r\n\t/**\r\n\t * Adds an `event` listener that will be invoked a single\r\n\t * time then automatically removed.\r\n\t *\r\n\t * @param {String} event\r\n\t * @param {Function} fn\r\n\t * @return {Emitter}\r\n\t * @api public\r\n\t */\r\n\t\r\n\tEmitter.prototype.once = function(event, fn){\r\n\t  function on() {\r\n\t    this.off(event, on);\r\n\t    fn.apply(this, arguments);\r\n\t  }\r\n\t\r\n\t  on.fn = fn;\r\n\t  this.on(event, on);\r\n\t  return this;\r\n\t};\r\n\t\r\n\t/**\r\n\t * Remove the given callback for `event` or all\r\n\t * registered callbacks.\r\n\t *\r\n\t * @param {String} event\r\n\t * @param {Function} fn\r\n\t * @return {Emitter}\r\n\t * @api public\r\n\t */\r\n\t\r\n\tEmitter.prototype.off =\r\n\tEmitter.prototype.removeListener =\r\n\tEmitter.prototype.removeAllListeners =\r\n\tEmitter.prototype.removeEventListener = function(event, fn){\r\n\t  this._callbacks = this._callbacks || {};\r\n\t\r\n\t  // all\r\n\t  if (0 == arguments.length) {\r\n\t    this._callbacks = {};\r\n\t    return this;\r\n\t  }\r\n\t\r\n\t  // specific event\r\n\t  var callbacks = this._callbacks['$' + event];\r\n\t  if (!callbacks) return this;\r\n\t\r\n\t  // remove all handlers\r\n\t  if (1 == arguments.length) {\r\n\t    delete this._callbacks['$' + event];\r\n\t    return this;\r\n\t  }\r\n\t\r\n\t  // remove specific handler\r\n\t  var cb;\r\n\t  for (var i = 0; i < callbacks.length; i++) {\r\n\t    cb = callbacks[i];\r\n\t    if (cb === fn || cb.fn === fn) {\r\n\t      callbacks.splice(i, 1);\r\n\t      break;\r\n\t    }\r\n\t  }\r\n\t  return this;\r\n\t};\r\n\t\r\n\t/**\r\n\t * Emit `event` with the given args.\r\n\t *\r\n\t * @param {String} event\r\n\t * @param {Mixed} ...\r\n\t * @return {Emitter}\r\n\t */\r\n\t\r\n\tEmitter.prototype.emit = function(event){\r\n\t  this._callbacks = this._callbacks || {};\r\n\t  var args = [].slice.call(arguments, 1)\r\n\t    , callbacks = this._callbacks['$' + event];\r\n\t\r\n\t  if (callbacks) {\r\n\t    callbacks = callbacks.slice(0);\r\n\t    for (var i = 0, len = callbacks.length; i < len; ++i) {\r\n\t      callbacks[i].apply(this, args);\r\n\t    }\r\n\t  }\r\n\t\r\n\t  return this;\r\n\t};\r\n\t\r\n\t/**\r\n\t * Return array of callbacks for `event`.\r\n\t *\r\n\t * @param {String} event\r\n\t * @return {Array}\r\n\t * @api public\r\n\t */\r\n\t\r\n\tEmitter.prototype.listeners = function(event){\r\n\t  this._callbacks = this._callbacks || {};\r\n\t  return this._callbacks['$' + event] || [];\r\n\t};\r\n\t\r\n\t/**\r\n\t * Check if this emitter has `event` handlers.\r\n\t *\r\n\t * @param {String} event\r\n\t * @return {Boolean}\r\n\t * @api public\r\n\t */\r\n\t\r\n\tEmitter.prototype.hasListeners = function(event){\r\n\t  return !! this.listeners(event).length;\r\n\t};\r\n\n\n/***/ },\n/* 4 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Module dependencies.\n\t */\n\t\n\tvar Emitter = __webpack_require__(3);\n\tvar reduce = __webpack_require__(10);\n\tvar requestBase = __webpack_require__(11);\n\tvar isObject = __webpack_require__(5);\n\t\n\t/**\n\t * Root reference for iframes.\n\t */\n\t\n\tvar root;\n\tif (typeof window !== 'undefined') { // Browser window\n\t  root = window;\n\t} else if (typeof self !== 'undefined') { // Web Worker\n\t  root = self;\n\t} else { // Other environments\n\t  root = this;\n\t}\n\t\n\t/**\n\t * Noop.\n\t */\n\t\n\tfunction noop(){};\n\t\n\t/**\n\t * Expose `request`.\n\t */\n\t\n\tvar request = module.exports = __webpack_require__(12).bind(null, Request);\n\t\n\t/**\n\t * Determine XHR.\n\t */\n\t\n\trequest.getXHR = function () {\n\t  if (root.XMLHttpRequest\n\t      && (!root.location || 'file:' != root.location.protocol\n\t          || !root.ActiveXObject)) {\n\t    return new XMLHttpRequest;\n\t  } else {\n\t    try { return new ActiveXObject('Microsoft.XMLHTTP'); } catch(e) {}\n\t    try { return new ActiveXObject('Msxml2.XMLHTTP.6.0'); } catch(e) {}\n\t    try { return new ActiveXObject('Msxml2.XMLHTTP.3.0'); } catch(e) {}\n\t    try { return new ActiveXObject('Msxml2.XMLHTTP'); } catch(e) {}\n\t  }\n\t  return false;\n\t};\n\t\n\t/**\n\t * Removes leading and trailing whitespace, added to support IE.\n\t *\n\t * @param {String} s\n\t * @return {String}\n\t * @api private\n\t */\n\t\n\tvar trim = ''.trim\n\t  ? function(s) { return s.trim(); }\n\t  : function(s) { return s.replace(/(^\\s*|\\s*$)/g, ''); };\n\t\n\t/**\n\t * Serialize the given `obj`.\n\t *\n\t * @param {Object} obj\n\t * @return {String}\n\t * @api private\n\t */\n\t\n\tfunction serialize(obj) {\n\t  if (!isObject(obj)) return obj;\n\t  var pairs = [];\n\t  for (var key in obj) {\n\t    if (null != obj[key]) {\n\t      pushEncodedKeyValuePair(pairs, key, obj[key]);\n\t    }\n\t  }\n\t  return pairs.join('&');\n\t}\n\t\n\t/**\n\t * Helps 'serialize' with serializing arrays.\n\t * Mutates the pairs array.\n\t *\n\t * @param {Array} pairs\n\t * @param {String} key\n\t * @param {Mixed} val\n\t */\n\t\n\tfunction pushEncodedKeyValuePair(pairs, key, val) {\n\t  if (Array.isArray(val)) {\n\t    return val.forEach(function(v) {\n\t      pushEncodedKeyValuePair(pairs, key, v);\n\t    });\n\t  } else if (isObject(val)) {\n\t    for(var subkey in val) {\n\t      pushEncodedKeyValuePair(pairs, key + '[' + subkey + ']', val[subkey]);\n\t    }\n\t    return;\n\t  }\n\t  pairs.push(encodeURIComponent(key)\n\t    + '=' + encodeURIComponent(val));\n\t}\n\t\n\t/**\n\t * Expose serialization method.\n\t */\n\t\n\t request.serializeObject = serialize;\n\t\n\t /**\n\t  * Parse the given x-www-form-urlencoded `str`.\n\t  *\n\t  * @param {String} str\n\t  * @return {Object}\n\t  * @api private\n\t  */\n\t\n\tfunction parseString(str) {\n\t  var obj = {};\n\t  var pairs = str.split('&');\n\t  var pair;\n\t  var pos;\n\t\n\t  for (var i = 0, len = pairs.length; i < len; ++i) {\n\t    pair = pairs[i];\n\t    pos = pair.indexOf('=');\n\t    if (pos == -1) {\n\t      obj[decodeURIComponent(pair)] = '';\n\t    } else {\n\t      obj[decodeURIComponent(pair.slice(0, pos))] =\n\t        decodeURIComponent(pair.slice(pos + 1));\n\t    }\n\t  }\n\t\n\t  return obj;\n\t}\n\t\n\t/**\n\t * Expose parser.\n\t */\n\t\n\trequest.parseString = parseString;\n\t\n\t/**\n\t * Default MIME type map.\n\t *\n\t *     superagent.types.xml = 'application/xml';\n\t *\n\t */\n\t\n\trequest.types = {\n\t  html: 'text/html',\n\t  json: 'application/json',\n\t  xml: 'application/xml',\n\t  urlencoded: 'application/x-www-form-urlencoded',\n\t  'form': 'application/x-www-form-urlencoded',\n\t  'form-data': 'application/x-www-form-urlencoded'\n\t};\n\t\n\t/**\n\t * Default serialization map.\n\t *\n\t *     superagent.serialize['application/xml'] = function(obj){\n\t *       return 'generated xml here';\n\t *     };\n\t *\n\t */\n\t\n\t request.serialize = {\n\t   'application/x-www-form-urlencoded': serialize,\n\t   'application/json': JSON.stringify\n\t };\n\t\n\t /**\n\t  * Default parsers.\n\t  *\n\t  *     superagent.parse['application/xml'] = function(str){\n\t  *       return { object parsed from str };\n\t  *     };\n\t  *\n\t  */\n\t\n\trequest.parse = {\n\t  'application/x-www-form-urlencoded': parseString,\n\t  'application/json': JSON.parse\n\t};\n\t\n\t/**\n\t * Parse the given header `str` into\n\t * an object containing the mapped fields.\n\t *\n\t * @param {String} str\n\t * @return {Object}\n\t * @api private\n\t */\n\t\n\tfunction parseHeader(str) {\n\t  var lines = str.split(/\\r?\\n/);\n\t  var fields = {};\n\t  var index;\n\t  var line;\n\t  var field;\n\t  var val;\n\t\n\t  lines.pop(); // trailing CRLF\n\t\n\t  for (var i = 0, len = lines.length; i < len; ++i) {\n\t    line = lines[i];\n\t    index = line.indexOf(':');\n\t    field = line.slice(0, index).toLowerCase();\n\t    val = trim(line.slice(index + 1));\n\t    fields[field] = val;\n\t  }\n\t\n\t  return fields;\n\t}\n\t\n\t/**\n\t * Check if `mime` is json or has +json structured syntax suffix.\n\t *\n\t * @param {String} mime\n\t * @return {Boolean}\n\t * @api private\n\t */\n\t\n\tfunction isJSON(mime) {\n\t  return /[\\/+]json\\b/.test(mime);\n\t}\n\t\n\t/**\n\t * Return the mime type for the given `str`.\n\t *\n\t * @param {String} str\n\t * @return {String}\n\t * @api private\n\t */\n\t\n\tfunction type(str){\n\t  return str.split(/ *; */).shift();\n\t};\n\t\n\t/**\n\t * Return header field parameters.\n\t *\n\t * @param {String} str\n\t * @return {Object}\n\t * @api private\n\t */\n\t\n\tfunction params(str){\n\t  return reduce(str.split(/ *; */), function(obj, str){\n\t    var parts = str.split(/ *= */)\n\t      , key = parts.shift()\n\t      , val = parts.shift();\n\t\n\t    if (key && val) obj[key] = val;\n\t    return obj;\n\t  }, {});\n\t};\n\t\n\t/**\n\t * Initialize a new `Response` with the given `xhr`.\n\t *\n\t *  - set flags (.ok, .error, etc)\n\t *  - parse header\n\t *\n\t * Examples:\n\t *\n\t *  Aliasing `superagent` as `request` is nice:\n\t *\n\t *      request = superagent;\n\t *\n\t *  We can use the promise-like API, or pass callbacks:\n\t *\n\t *      request.get('/').end(function(res){});\n\t *      request.get('/', function(res){});\n\t *\n\t *  Sending data can be chained:\n\t *\n\t *      request\n\t *        .post('/user')\n\t *        .send({ name: 'tj' })\n\t *        .end(function(res){});\n\t *\n\t *  Or passed to `.send()`:\n\t *\n\t *      request\n\t *        .post('/user')\n\t *        .send({ name: 'tj' }, function(res){});\n\t *\n\t *  Or passed to `.post()`:\n\t *\n\t *      request\n\t *        .post('/user', { name: 'tj' })\n\t *        .end(function(res){});\n\t *\n\t * Or further reduced to a single call for simple cases:\n\t *\n\t *      request\n\t *        .post('/user', { name: 'tj' }, function(res){});\n\t *\n\t * @param {XMLHTTPRequest} xhr\n\t * @param {Object} options\n\t * @api private\n\t */\n\t\n\tfunction Response(req, options) {\n\t  options = options || {};\n\t  this.req = req;\n\t  this.xhr = this.req.xhr;\n\t  // responseText is accessible only if responseType is '' or 'text' and on older browsers\n\t  this.text = ((this.req.method !='HEAD' && (this.xhr.responseType === '' || this.xhr.responseType === 'text')) || typeof this.xhr.responseType === 'undefined')\n\t     ? this.xhr.responseText\n\t     : null;\n\t  this.statusText = this.req.xhr.statusText;\n\t  this._setStatusProperties(this.xhr.status);\n\t  this.header = this.headers = parseHeader(this.xhr.getAllResponseHeaders());\n\t  // getAllResponseHeaders sometimes falsely returns \"\" for CORS requests, but\n\t  // getResponseHeader still works. so we get content-type even if getting\n\t  // other headers fails.\n\t  this.header['content-type'] = this.xhr.getResponseHeader('content-type');\n\t  this._setHeaderProperties(this.header);\n\t  this.body = this.req.method != 'HEAD'\n\t    ? this._parseBody(this.text ? this.text : this.xhr.response)\n\t    : null;\n\t}\n\t\n\t/**\n\t * Get case-insensitive `field` value.\n\t *\n\t * @param {String} field\n\t * @return {String}\n\t * @api public\n\t */\n\t\n\tResponse.prototype.get = function(field){\n\t  return this.header[field.toLowerCase()];\n\t};\n\t\n\t/**\n\t * Set header related properties:\n\t *\n\t *   - `.type` the content type without params\n\t *\n\t * A response of \"Content-Type: text/plain; charset=utf-8\"\n\t * will provide you with a `.type` of \"text/plain\".\n\t *\n\t * @param {Object} header\n\t * @api private\n\t */\n\t\n\tResponse.prototype._setHeaderProperties = function(header){\n\t  // content-type\n\t  var ct = this.header['content-type'] || '';\n\t  this.type = type(ct);\n\t\n\t  // params\n\t  var obj = params(ct);\n\t  for (var key in obj) this[key] = obj[key];\n\t};\n\t\n\t/**\n\t * Parse the given body `str`.\n\t *\n\t * Used for auto-parsing of bodies. Parsers\n\t * are defined on the `superagent.parse` object.\n\t *\n\t * @param {String} str\n\t * @return {Mixed}\n\t * @api private\n\t */\n\t\n\tResponse.prototype._parseBody = function(str){\n\t  var parse = request.parse[this.type];\n\t  if (!parse && isJSON(this.type)) {\n\t    parse = request.parse['application/json'];\n\t  }\n\t  return parse && str && (str.length || str instanceof Object)\n\t    ? parse(str)\n\t    : null;\n\t};\n\t\n\t/**\n\t * Set flags such as `.ok` based on `status`.\n\t *\n\t * For example a 2xx response will give you a `.ok` of __true__\n\t * whereas 5xx will be __false__ and `.error` will be __true__. The\n\t * `.clientError` and `.serverError` are also available to be more\n\t * specific, and `.statusType` is the class of error ranging from 1..5\n\t * sometimes useful for mapping respond colors etc.\n\t *\n\t * \"sugar\" properties are also defined for common cases. Currently providing:\n\t *\n\t *   - .noContent\n\t *   - .badRequest\n\t *   - .unauthorized\n\t *   - .notAcceptable\n\t *   - .notFound\n\t *\n\t * @param {Number} status\n\t * @api private\n\t */\n\t\n\tResponse.prototype._setStatusProperties = function(status){\n\t  // handle IE9 bug: http://stackoverflow.com/questions/10046972/msie-returns-status-code-of-1223-for-ajax-request\n\t  if (status === 1223) {\n\t    status = 204;\n\t  }\n\t\n\t  var type = status / 100 | 0;\n\t\n\t  // status / class\n\t  this.status = this.statusCode = status;\n\t  this.statusType = type;\n\t\n\t  // basics\n\t  this.info = 1 == type;\n\t  this.ok = 2 == type;\n\t  this.clientError = 4 == type;\n\t  this.serverError = 5 == type;\n\t  this.error = (4 == type || 5 == type)\n\t    ? this.toError()\n\t    : false;\n\t\n\t  // sugar\n\t  this.accepted = 202 == status;\n\t  this.noContent = 204 == status;\n\t  this.badRequest = 400 == status;\n\t  this.unauthorized = 401 == status;\n\t  this.notAcceptable = 406 == status;\n\t  this.notFound = 404 == status;\n\t  this.forbidden = 403 == status;\n\t};\n\t\n\t/**\n\t * Return an `Error` representative of this response.\n\t *\n\t * @return {Error}\n\t * @api public\n\t */\n\t\n\tResponse.prototype.toError = function(){\n\t  var req = this.req;\n\t  var method = req.method;\n\t  var url = req.url;\n\t\n\t  var msg = 'cannot ' + method + ' ' + url + ' (' + this.status + ')';\n\t  var err = new Error(msg);\n\t  err.status = this.status;\n\t  err.method = method;\n\t  err.url = url;\n\t\n\t  return err;\n\t};\n\t\n\t/**\n\t * Expose `Response`.\n\t */\n\t\n\trequest.Response = Response;\n\t\n\t/**\n\t * Initialize a new `Request` with the given `method` and `url`.\n\t *\n\t * @param {String} method\n\t * @param {String} url\n\t * @api public\n\t */\n\t\n\tfunction Request(method, url) {\n\t  var self = this;\n\t  this._query = this._query || [];\n\t  this.method = method;\n\t  this.url = url;\n\t  this.header = {}; // preserves header name case\n\t  this._header = {}; // coerces header names to lowercase\n\t  this.on('end', function(){\n\t    var err = null;\n\t    var res = null;\n\t\n\t    try {\n\t      res = new Response(self);\n\t    } catch(e) {\n\t      err = new Error('Parser is unable to parse the response');\n\t      err.parse = true;\n\t      err.original = e;\n\t      // issue #675: return the raw response if the response parsing fails\n\t      err.rawResponse = self.xhr && self.xhr.responseText ? self.xhr.responseText : null;\n\t      // issue #876: return the http status code if the response parsing fails\n\t      err.statusCode = self.xhr && self.xhr.status ? self.xhr.status : null;\n\t      return self.callback(err);\n\t    }\n\t\n\t    self.emit('response', res);\n\t\n\t    if (err) {\n\t      return self.callback(err, res);\n\t    }\n\t\n\t    try {\n\t      if (res.status >= 200 && res.status < 300) {\n\t        return self.callback(err, res);\n\t      }\n\t\n\t      var new_err = new Error(res.statusText || 'Unsuccessful HTTP response');\n\t      new_err.original = err;\n\t      new_err.response = res;\n\t      new_err.status = res.status;\n\t\n\t      self.callback(new_err, res);\n\t    } catch(e) {\n\t      self.callback(e); // #985 touching res may cause INVALID_STATE_ERR on old Android\n\t    }\n\t  });\n\t}\n\t\n\t/**\n\t * Mixin `Emitter` and `requestBase`.\n\t */\n\t\n\tEmitter(Request.prototype);\n\tfor (var key in requestBase) {\n\t  Request.prototype[key] = requestBase[key];\n\t}\n\t\n\t/**\n\t * Set Content-Type to `type`, mapping values from `request.types`.\n\t *\n\t * Examples:\n\t *\n\t *      superagent.types.xml = 'application/xml';\n\t *\n\t *      request.post('/')\n\t *        .type('xml')\n\t *        .send(xmlstring)\n\t *        .end(callback);\n\t *\n\t *      request.post('/')\n\t *        .type('application/xml')\n\t *        .send(xmlstring)\n\t *        .end(callback);\n\t *\n\t * @param {String} type\n\t * @return {Request} for chaining\n\t * @api public\n\t */\n\t\n\tRequest.prototype.type = function(type){\n\t  this.set('Content-Type', request.types[type] || type);\n\t  return this;\n\t};\n\t\n\t/**\n\t * Set responseType to `val`. Presently valid responseTypes are 'blob' and\n\t * 'arraybuffer'.\n\t *\n\t * Examples:\n\t *\n\t *      req.get('/')\n\t *        .responseType('blob')\n\t *        .end(callback);\n\t *\n\t * @param {String} val\n\t * @return {Request} for chaining\n\t * @api public\n\t */\n\t\n\tRequest.prototype.responseType = function(val){\n\t  this._responseType = val;\n\t  return this;\n\t};\n\t\n\t/**\n\t * Set Accept to `type`, mapping values from `request.types`.\n\t *\n\t * Examples:\n\t *\n\t *      superagent.types.json = 'application/json';\n\t *\n\t *      request.get('/agent')\n\t *        .accept('json')\n\t *        .end(callback);\n\t *\n\t *      request.get('/agent')\n\t *        .accept('application/json')\n\t *        .end(callback);\n\t *\n\t * @param {String} accept\n\t * @return {Request} for chaining\n\t * @api public\n\t */\n\t\n\tRequest.prototype.accept = function(type){\n\t  this.set('Accept', request.types[type] || type);\n\t  return this;\n\t};\n\t\n\t/**\n\t * Set Authorization field value with `user` and `pass`.\n\t *\n\t * @param {String} user\n\t * @param {String} pass\n\t * @param {Object} options with 'type' property 'auto' or 'basic' (default 'basic')\n\t * @return {Request} for chaining\n\t * @api public\n\t */\n\t\n\tRequest.prototype.auth = function(user, pass, options){\n\t  if (!options) {\n\t    options = {\n\t      type: 'basic'\n\t    }\n\t  }\n\t\n\t  switch (options.type) {\n\t    case 'basic':\n\t      var str = btoa(user + ':' + pass);\n\t      this.set('Authorization', 'Basic ' + str);\n\t    break;\n\t\n\t    case 'auto':\n\t      this.username = user;\n\t      this.password = pass;\n\t    break;\n\t  }\n\t  return this;\n\t};\n\t\n\t/**\n\t* Add query-string `val`.\n\t*\n\t* Examples:\n\t*\n\t*   request.get('/shoes')\n\t*     .query('size=10')\n\t*     .query({ color: 'blue' })\n\t*\n\t* @param {Object|String} val\n\t* @return {Request} for chaining\n\t* @api public\n\t*/\n\t\n\tRequest.prototype.query = function(val){\n\t  if ('string' != typeof val) val = serialize(val);\n\t  if (val) this._query.push(val);\n\t  return this;\n\t};\n\t\n\t/**\n\t * Queue the given `file` as an attachment to the specified `field`,\n\t * with optional `filename`.\n\t *\n\t * ``` js\n\t * request.post('/upload')\n\t *   .attach('content', new Blob(['<a id=\"a\"><b id=\"b\">hey!</b></a>'], { type: \"text/html\"}))\n\t *   .end(callback);\n\t * ```\n\t *\n\t * @param {String} field\n\t * @param {Blob|File} file\n\t * @param {String} filename\n\t * @return {Request} for chaining\n\t * @api public\n\t */\n\t\n\tRequest.prototype.attach = function(field, file, filename){\n\t  this._getFormData().append(field, file, filename || file.name);\n\t  return this;\n\t};\n\t\n\tRequest.prototype._getFormData = function(){\n\t  if (!this._formData) {\n\t    this._formData = new root.FormData();\n\t  }\n\t  return this._formData;\n\t};\n\t\n\t/**\n\t * Invoke the callback with `err` and `res`\n\t * and handle arity check.\n\t *\n\t * @param {Error} err\n\t * @param {Response} res\n\t * @api private\n\t */\n\t\n\tRequest.prototype.callback = function(err, res){\n\t  var fn = this._callback;\n\t  this.clearTimeout();\n\t  fn(err, res);\n\t};\n\t\n\t/**\n\t * Invoke callback with x-domain error.\n\t *\n\t * @api private\n\t */\n\t\n\tRequest.prototype.crossDomainError = function(){\n\t  var err = new Error('Request has been terminated\\nPossible causes: the network is offline, Origin is not allowed by Access-Control-Allow-Origin, the page is being unloaded, etc.');\n\t  err.crossDomain = true;\n\t\n\t  err.status = this.status;\n\t  err.method = this.method;\n\t  err.url = this.url;\n\t\n\t  this.callback(err);\n\t};\n\t\n\t/**\n\t * Invoke callback with timeout error.\n\t *\n\t * @api private\n\t */\n\t\n\tRequest.prototype._timeoutError = function(){\n\t  var timeout = this._timeout;\n\t  var err = new Error('timeout of ' + timeout + 'ms exceeded');\n\t  err.timeout = timeout;\n\t  this.callback(err);\n\t};\n\t\n\t/**\n\t * Compose querystring to append to req.url\n\t *\n\t * @api private\n\t */\n\t\n\tRequest.prototype._appendQueryString = function(){\n\t  var query = this._query.join('&');\n\t  if (query) {\n\t    this.url += ~this.url.indexOf('?')\n\t      ? '&' + query\n\t      : '?' + query;\n\t  }\n\t};\n\t\n\t/**\n\t * Initiate request, invoking callback `fn(res)`\n\t * with an instanceof `Response`.\n\t *\n\t * @param {Function} fn\n\t * @return {Request} for chaining\n\t * @api public\n\t */\n\t\n\tRequest.prototype.end = function(fn){\n\t  var self = this;\n\t  var xhr = this.xhr = request.getXHR();\n\t  var timeout = this._timeout;\n\t  var data = this._formData || this._data;\n\t\n\t  // store callback\n\t  this._callback = fn || noop;\n\t\n\t  // state change\n\t  xhr.onreadystatechange = function(){\n\t    if (4 != xhr.readyState) return;\n\t\n\t    // In IE9, reads to any property (e.g. status) off of an aborted XHR will\n\t    // result in the error \"Could not complete the operation due to error c00c023f\"\n\t    var status;\n\t    try { status = xhr.status } catch(e) { status = 0; }\n\t\n\t    if (0 == status) {\n\t      if (self.timedout) return self._timeoutError();\n\t      if (self._aborted) return;\n\t      return self.crossDomainError();\n\t    }\n\t    self.emit('end');\n\t  };\n\t\n\t  // progress\n\t  var handleProgress = function(e){\n\t    if (e.total > 0) {\n\t      e.percent = e.loaded / e.total * 100;\n\t    }\n\t    e.direction = 'download';\n\t    self.emit('progress', e);\n\t  };\n\t  if (this.hasListeners('progress')) {\n\t    xhr.onprogress = handleProgress;\n\t  }\n\t  try {\n\t    if (xhr.upload && this.hasListeners('progress')) {\n\t      xhr.upload.onprogress = handleProgress;\n\t    }\n\t  } catch(e) {\n\t    // Accessing xhr.upload fails in IE from a web worker, so just pretend it doesn't exist.\n\t    // Reported here:\n\t    // https://connect.microsoft.com/IE/feedback/details/837245/xmlhttprequest-upload-throws-invalid-argument-when-used-from-web-worker-context\n\t  }\n\t\n\t  // timeout\n\t  if (timeout && !this._timer) {\n\t    this._timer = setTimeout(function(){\n\t      self.timedout = true;\n\t      self.abort();\n\t    }, timeout);\n\t  }\n\t\n\t  // querystring\n\t  this._appendQueryString();\n\t\n\t  // initiate request\n\t  if (this.username && this.password) {\n\t    xhr.open(this.method, this.url, true, this.username, this.password);\n\t  } else {\n\t    xhr.open(this.method, this.url, true);\n\t  }\n\t\n\t  // CORS\n\t  if (this._withCredentials) xhr.withCredentials = true;\n\t\n\t  // body\n\t  if ('GET' != this.method && 'HEAD' != this.method && 'string' != typeof data && !this._isHost(data)) {\n\t    // serialize stuff\n\t    var contentType = this._header['content-type'];\n\t    var serialize = this._serializer || request.serialize[contentType ? contentType.split(';')[0] : ''];\n\t    if (!serialize && isJSON(contentType)) serialize = request.serialize['application/json'];\n\t    if (serialize) data = serialize(data);\n\t  }\n\t\n\t  // set header fields\n\t  for (var field in this.header) {\n\t    if (null == this.header[field]) continue;\n\t    xhr.setRequestHeader(field, this.header[field]);\n\t  }\n\t\n\t  if (this._responseType) {\n\t    xhr.responseType = this._responseType;\n\t  }\n\t\n\t  // send stuff\n\t  this.emit('request', this);\n\t\n\t  // IE11 xhr.send(undefined) sends 'undefined' string as POST payload (instead of nothing)\n\t  // We need null here if data is undefined\n\t  xhr.send(typeof data !== 'undefined' ? data : null);\n\t  return this;\n\t};\n\t\n\t\n\t/**\n\t * Expose `Request`.\n\t */\n\t\n\trequest.Request = Request;\n\t\n\t/**\n\t * GET `url` with optional callback `fn(res)`.\n\t *\n\t * @param {String} url\n\t * @param {Mixed|Function} data or fn\n\t * @param {Function} fn\n\t * @return {Request}\n\t * @api public\n\t */\n\t\n\trequest.get = function(url, data, fn){\n\t  var req = request('GET', url);\n\t  if ('function' == typeof data) fn = data, data = null;\n\t  if (data) req.query(data);\n\t  if (fn) req.end(fn);\n\t  return req;\n\t};\n\t\n\t/**\n\t * HEAD `url` with optional callback `fn(res)`.\n\t *\n\t * @param {String} url\n\t * @param {Mixed|Function} data or fn\n\t * @param {Function} fn\n\t * @return {Request}\n\t * @api public\n\t */\n\t\n\trequest.head = function(url, data, fn){\n\t  var req = request('HEAD', url);\n\t  if ('function' == typeof data) fn = data, data = null;\n\t  if (data) req.send(data);\n\t  if (fn) req.end(fn);\n\t  return req;\n\t};\n\t\n\t/**\n\t * OPTIONS query to `url` with optional callback `fn(res)`.\n\t *\n\t * @param {String} url\n\t * @param {Mixed|Function} data or fn\n\t * @param {Function} fn\n\t * @return {Request}\n\t * @api public\n\t */\n\t\n\trequest.options = function(url, data, fn){\n\t  var req = request('OPTIONS', url);\n\t  if ('function' == typeof data) fn = data, data = null;\n\t  if (data) req.send(data);\n\t  if (fn) req.end(fn);\n\t  return req;\n\t};\n\t\n\t/**\n\t * DELETE `url` with optional callback `fn(res)`.\n\t *\n\t * @param {String} url\n\t * @param {Function} fn\n\t * @return {Request}\n\t * @api public\n\t */\n\t\n\tfunction del(url, fn){\n\t  var req = request('DELETE', url);\n\t  if (fn) req.end(fn);\n\t  return req;\n\t};\n\t\n\trequest['del'] = del;\n\trequest['delete'] = del;\n\t\n\t/**\n\t * PATCH `url` with optional `data` and callback `fn(res)`.\n\t *\n\t * @param {String} url\n\t * @param {Mixed} data\n\t * @param {Function} fn\n\t * @return {Request}\n\t * @api public\n\t */\n\t\n\trequest.patch = function(url, data, fn){\n\t  var req = request('PATCH', url);\n\t  if ('function' == typeof data) fn = data, data = null;\n\t  if (data) req.send(data);\n\t  if (fn) req.end(fn);\n\t  return req;\n\t};\n\t\n\t/**\n\t * POST `url` with optional `data` and callback `fn(res)`.\n\t *\n\t * @param {String} url\n\t * @param {Mixed} data\n\t * @param {Function} fn\n\t * @return {Request}\n\t * @api public\n\t */\n\t\n\trequest.post = function(url, data, fn){\n\t  var req = request('POST', url);\n\t  if ('function' == typeof data) fn = data, data = null;\n\t  if (data) req.send(data);\n\t  if (fn) req.end(fn);\n\t  return req;\n\t};\n\t\n\t/**\n\t * PUT `url` with optional `data` and callback `fn(res)`.\n\t *\n\t * @param {String} url\n\t * @param {Mixed|Function} data or fn\n\t * @param {Function} fn\n\t * @return {Request}\n\t * @api public\n\t */\n\t\n\trequest.put = function(url, data, fn){\n\t  var req = request('PUT', url);\n\t  if ('function' == typeof data) fn = data, data = null;\n\t  if (data) req.send(data);\n\t  if (fn) req.end(fn);\n\t  return req;\n\t};\n\n\n/***/ },\n/* 5 */\n/***/ function(module, exports) {\n\n\t/**\n\t * Check if `obj` is an object.\n\t *\n\t * @param {Object} obj\n\t * @return {Boolean}\n\t * @api private\n\t */\n\t\n\tfunction isObject(obj) {\n\t  return null !== obj && 'object' === typeof obj;\n\t}\n\t\n\tmodule.exports = isObject;\n\n\n/***/ },\n/* 6 */\n/***/ function(module, exports) {\n\n\t/**\n\t * Created by aclinton on 7/11/16.\n\t */\n\t\n\tmodule.exports = function (host, domain, target) {\n\t    var url = host + \"://\";\n\t    url += domain;\n\t\n\t    //remove trailing slash from domain\n\t    if (url.substr(url.length - 1) === '/')\n\t        url = url.slice(0, -1);\n\t\n\t    //add forward slash to target\n\t    if(target.substr(target.length - 1) !== '/')\n\t        target += '/';\n\t\n\t    url += target;\n\t};\n\n\n/***/ },\n/* 7 */\n/***/ function(module, exports) {\n\n\t/**\n\t * Created by aclinton on 7/11/16.\n\t */\n\tmodule.exports = function (err, res, callback) {\n\t    var cb = callback || function() {};\n\t\n\t    if(res && !res.ok){\n\t        var is_err = res.body && res.body.error_code;\n\t        err = new Error(is_err ? res.body.message : 'Unknown error occurred');\n\t        err.code = is_err ? res.body.error_code : 'UnknownError';\n\t    }\n\t\n\t    if(err){\n\t        cb(err, null);\n\t    } else {\n\t        cb(null, res.body);\n\t    }\n\t\n\t    return;\n\t}\n\n\n/***/ },\n/* 8 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Created by aclinton on 7/11/16.\n\t */\n\tvar request = __webpack_require__(4),\n\t    handleResponse = __webpack_require__(7);\n\t\n\tmodule.exports = function (url, data, token, cb) {\n\t    var r = request.post(url).send(data || {});\n\t\n\t    if(token) {\n\t        r.set('Authorization', 'Bearer ' + token);\n\t    }\n\t\n\t    r.end(function (err, res) {\n\t        handleResponse(err, res, cb);\n\t        cb = null;\n\t    });\n\t};\n\n\n/***/ },\n/* 9 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/*!\n\t  * domready (c) Dustin Diaz 2014 - License MIT\n\t  */\n\t!function (name, definition) {\n\t\n\t  if (true) module.exports = definition()\n\t  else if (typeof define == 'function' && typeof define.amd == 'object') define(definition)\n\t  else this[name] = definition()\n\t\n\t}('domready', function () {\n\t\n\t  var fns = [], listener\n\t    , doc = document\n\t    , hack = doc.documentElement.doScroll\n\t    , domContentLoaded = 'DOMContentLoaded'\n\t    , loaded = (hack ? /^loaded|^c/ : /^loaded|^i|^c/).test(doc.readyState)\n\t\n\t\n\t  if (!loaded)\n\t  doc.addEventListener(domContentLoaded, listener = function () {\n\t    doc.removeEventListener(domContentLoaded, listener)\n\t    loaded = 1\n\t    while (listener = fns.shift()) listener()\n\t  })\n\t\n\t  return function (fn) {\n\t    loaded ? setTimeout(fn, 0) : fns.push(fn)\n\t  }\n\t\n\t});\n\n\n/***/ },\n/* 10 */\n/***/ function(module, exports) {\n\n\t\n\t/**\n\t * Reduce `arr` with `fn`.\n\t *\n\t * @param {Array} arr\n\t * @param {Function} fn\n\t * @param {Mixed} initial\n\t *\n\t * TODO: combatible error handling?\n\t */\n\t\n\tmodule.exports = function(arr, fn, initial){  \n\t  var idx = 0;\n\t  var len = arr.length;\n\t  var curr = arguments.length == 3\n\t    ? initial\n\t    : arr[idx++];\n\t\n\t  while (idx < len) {\n\t    curr = fn.call(null, curr, arr[idx], ++idx, arr);\n\t  }\n\t  \n\t  return curr;\n\t};\n\n/***/ },\n/* 11 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Module of mixed-in functions shared between node and client code\n\t */\n\tvar isObject = __webpack_require__(5);\n\t\n\t/**\n\t * Clear previous timeout.\n\t *\n\t * @return {Request} for chaining\n\t * @api public\n\t */\n\t\n\texports.clearTimeout = function _clearTimeout(){\n\t  this._timeout = 0;\n\t  clearTimeout(this._timer);\n\t  return this;\n\t};\n\t\n\t/**\n\t * Override default response body parser\n\t *\n\t * This function will be called to convert incoming data into request.body\n\t *\n\t * @param {Function}\n\t * @api public\n\t */\n\t\n\texports.parse = function parse(fn){\n\t  this._parser = fn;\n\t  return this;\n\t};\n\t\n\t/**\n\t * Override default request body serializer\n\t *\n\t * This function will be called to convert data set via .send or .attach into payload to send\n\t *\n\t * @param {Function}\n\t * @api public\n\t */\n\t\n\texports.serialize = function serialize(fn){\n\t  this._serializer = fn;\n\t  return this;\n\t};\n\t\n\t/**\n\t * Set timeout to `ms`.\n\t *\n\t * @param {Number} ms\n\t * @return {Request} for chaining\n\t * @api public\n\t */\n\t\n\texports.timeout = function timeout(ms){\n\t  this._timeout = ms;\n\t  return this;\n\t};\n\t\n\t/**\n\t * Promise support\n\t *\n\t * @param {Function} resolve\n\t * @param {Function} reject\n\t * @return {Request}\n\t */\n\t\n\texports.then = function then(resolve, reject) {\n\t  if (!this._fullfilledPromise) {\n\t    var self = this;\n\t    this._fullfilledPromise = new Promise(function(innerResolve, innerReject){\n\t      self.end(function(err, res){\n\t        if (err) innerReject(err); else innerResolve(res);\n\t      });\n\t    });\n\t  }\n\t  return this._fullfilledPromise.then(resolve, reject);\n\t}\n\t\n\t/**\n\t * Allow for extension\n\t */\n\t\n\texports.use = function use(fn) {\n\t  fn(this);\n\t  return this;\n\t}\n\t\n\t\n\t/**\n\t * Get request header `field`.\n\t * Case-insensitive.\n\t *\n\t * @param {String} field\n\t * @return {String}\n\t * @api public\n\t */\n\t\n\texports.get = function(field){\n\t  return this._header[field.toLowerCase()];\n\t};\n\t\n\t/**\n\t * Get case-insensitive header `field` value.\n\t * This is a deprecated internal API. Use `.get(field)` instead.\n\t *\n\t * (getHeader is no longer used internally by the superagent code base)\n\t *\n\t * @param {String} field\n\t * @return {String}\n\t * @api private\n\t * @deprecated\n\t */\n\t\n\texports.getHeader = exports.get;\n\t\n\t/**\n\t * Set header `field` to `val`, or multiple fields with one object.\n\t * Case-insensitive.\n\t *\n\t * Examples:\n\t *\n\t *      req.get('/')\n\t *        .set('Accept', 'application/json')\n\t *        .set('X-API-Key', 'foobar')\n\t *        .end(callback);\n\t *\n\t *      req.get('/')\n\t *        .set({ Accept: 'application/json', 'X-API-Key': 'foobar' })\n\t *        .end(callback);\n\t *\n\t * @param {String|Object} field\n\t * @param {String} val\n\t * @return {Request} for chaining\n\t * @api public\n\t */\n\t\n\texports.set = function(field, val){\n\t  if (isObject(field)) {\n\t    for (var key in field) {\n\t      this.set(key, field[key]);\n\t    }\n\t    return this;\n\t  }\n\t  this._header[field.toLowerCase()] = val;\n\t  this.header[field] = val;\n\t  return this;\n\t};\n\t\n\t/**\n\t * Remove header `field`.\n\t * Case-insensitive.\n\t *\n\t * Example:\n\t *\n\t *      req.get('/')\n\t *        .unset('User-Agent')\n\t *        .end(callback);\n\t *\n\t * @param {String} field\n\t */\n\texports.unset = function(field){\n\t  delete this._header[field.toLowerCase()];\n\t  delete this.header[field];\n\t  return this;\n\t};\n\t\n\t/**\n\t * Write the field `name` and `val` for \"multipart/form-data\"\n\t * request bodies.\n\t *\n\t * ``` js\n\t * request.post('/upload')\n\t *   .field('foo', 'bar')\n\t *   .end(callback);\n\t * ```\n\t *\n\t * @param {String} name\n\t * @param {String|Blob|File|Buffer|fs.ReadStream} val\n\t * @return {Request} for chaining\n\t * @api public\n\t */\n\texports.field = function(name, val) {\n\t  this._getFormData().append(name, val);\n\t  return this;\n\t};\n\t\n\t/**\n\t * Abort the request, and clear potential timeout.\n\t *\n\t * @return {Request}\n\t * @api public\n\t */\n\texports.abort = function(){\n\t  if (this._aborted) {\n\t    return this;\n\t  }\n\t  this._aborted = true;\n\t  this.xhr && this.xhr.abort(); // browser\n\t  this.req && this.req.abort(); // node\n\t  this.clearTimeout();\n\t  this.emit('abort');\n\t  return this;\n\t};\n\t\n\t/**\n\t * Enable transmission of cookies with x-domain requests.\n\t *\n\t * Note that for this to work the origin must not be\n\t * using \"Access-Control-Allow-Origin\" with a wildcard,\n\t * and also must set \"Access-Control-Allow-Credentials\"\n\t * to \"true\".\n\t *\n\t * @api public\n\t */\n\t\n\texports.withCredentials = function(){\n\t  // This is browser-only functionality. Node side is no-op.\n\t  this._withCredentials = true;\n\t  return this;\n\t};\n\t\n\t/**\n\t * Set the max redirects to `n`. Does noting in browser XHR implementation.\n\t *\n\t * @param {Number} n\n\t * @return {Request} for chaining\n\t * @api public\n\t */\n\t\n\texports.redirects = function(n){\n\t  this._maxRedirects = n;\n\t  return this;\n\t};\n\t\n\t/**\n\t * Convert to a plain javascript object (not JSON string) of scalar properties.\n\t * Note as this method is designed to return a useful non-this value,\n\t * it cannot be chained.\n\t *\n\t * @return {Object} describing method, url, and data of this request\n\t * @api public\n\t */\n\t\n\texports.toJSON = function(){\n\t  return {\n\t    method: this.method,\n\t    url: this.url,\n\t    data: this._data\n\t  };\n\t};\n\t\n\t/**\n\t * Check if `obj` is a host object,\n\t * we don't want to serialize these :)\n\t *\n\t * TODO: future proof, move to compoent land\n\t *\n\t * @param {Object} obj\n\t * @return {Boolean}\n\t * @api private\n\t */\n\t\n\texports._isHost = function _isHost(obj) {\n\t  var str = {}.toString.call(obj);\n\t\n\t  switch (str) {\n\t    case '[object File]':\n\t    case '[object Blob]':\n\t    case '[object FormData]':\n\t      return true;\n\t    default:\n\t      return false;\n\t  }\n\t}\n\t\n\t/**\n\t * Send `data` as the request body, defaulting the `.type()` to \"json\" when\n\t * an object is given.\n\t *\n\t * Examples:\n\t *\n\t *       // manual json\n\t *       request.post('/user')\n\t *         .type('json')\n\t *         .send('{\"name\":\"tj\"}')\n\t *         .end(callback)\n\t *\n\t *       // auto json\n\t *       request.post('/user')\n\t *         .send({ name: 'tj' })\n\t *         .end(callback)\n\t *\n\t *       // manual x-www-form-urlencoded\n\t *       request.post('/user')\n\t *         .type('form')\n\t *         .send('name=tj')\n\t *         .end(callback)\n\t *\n\t *       // auto x-www-form-urlencoded\n\t *       request.post('/user')\n\t *         .type('form')\n\t *         .send({ name: 'tj' })\n\t *         .end(callback)\n\t *\n\t *       // defaults to x-www-form-urlencoded\n\t *      request.post('/user')\n\t *        .send('name=tobi')\n\t *        .send('species=ferret')\n\t *        .end(callback)\n\t *\n\t * @param {String|Object} data\n\t * @return {Request} for chaining\n\t * @api public\n\t */\n\t\n\texports.send = function(data){\n\t  var obj = isObject(data);\n\t  var type = this._header['content-type'];\n\t\n\t  // merge\n\t  if (obj && isObject(this._data)) {\n\t    for (var key in data) {\n\t      this._data[key] = data[key];\n\t    }\n\t  } else if ('string' == typeof data) {\n\t    // default to x-www-form-urlencoded\n\t    if (!type) this.type('form');\n\t    type = this._header['content-type'];\n\t    if ('application/x-www-form-urlencoded' == type) {\n\t      this._data = this._data\n\t        ? this._data + '&' + data\n\t        : data;\n\t    } else {\n\t      this._data = (this._data || '') + data;\n\t    }\n\t  } else {\n\t    this._data = data;\n\t  }\n\t\n\t  if (!obj || this._isHost(data)) return this;\n\t\n\t  // default to json\n\t  if (!type) this.type('json');\n\t  return this;\n\t};\n\n\n/***/ },\n/* 12 */\n/***/ function(module, exports) {\n\n\t// The node and browser modules expose versions of this with the\n\t// appropriate constructor function bound as first argument\n\t/**\n\t * Issue a request:\n\t *\n\t * Examples:\n\t *\n\t *    request('GET', '/users').end(callback)\n\t *    request('/users').end(callback)\n\t *    request('/users', callback)\n\t *\n\t * @param {String} method\n\t * @param {String|Function} url or callback\n\t * @return {Request}\n\t * @api public\n\t */\n\t\n\tfunction request(RequestConstructor, method, url) {\n\t  // callback\n\t  if ('function' == typeof url) {\n\t    return new RequestConstructor('GET', method).end(url);\n\t  }\n\t\n\t  // url first\n\t  if (2 == arguments.length) {\n\t    return new RequestConstructor('GET', method);\n\t  }\n\t\n\t  return new RequestConstructor(method, url);\n\t}\n\t\n\tmodule.exports = request;\n\n\n/***/ },\n/* 13 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Created by aclinton on 7/11/16.\n\t */\n\tvar post = __webpack_require__(8),\n\t    urlBuilder = __webpack_require__(6),\n\t    Storage = __webpack_require__(2);\n\t\n\tmodule.exports = function (cb) {\n\t    var data = {\n\t        grant_type: \"client_credentials\",\n\t        client_id: this.config.clientId,\n\t        client_secret: this.config.clientSecret\n\t    };\n\t\n\t    var key = this.config.storageKey;\n\t\n\t    var url = urlBuilder(this.config.host, this.config.url, '/oauth/access_token');\n\t    \n\t    post(url, data, null, function (err, res){\n\t        if(err){\n\t            cb(err, null);\n\t        } else {\n\t            var t = res.access_token;\n\t            Storage.setToken(key, t);\n\t            cb(null, res);\n\t        }\n\t    });\n\t};\n\n\n/***/ },\n/* 14 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Created by aclinton on 7/11/16.\n\t */\n\tvar request = __webpack_require__(4),\n\t    handleResponse = __webpack_require__(7),\n\t    urlBuilder = __webpack_require__(6),\n\t    Storage = __webpack_require__(2),\n\t    RetsRabbit = __webpack_require__(1);\n\t\n\tmodule.exports = function (url, params, token, callback) {\n\t    var this_token, data, _url, r;\n\t\n\t    if(arguments.length < 4){\n\t        RetsRabbit.log(\"Not enough arguments supplied to the method get()\");\n\t        return;\n\t    } else {\n\t        if(token == null || typeof token !== 'string') {\n\t            this_token = Storage.getToken(this.config.storageKey);\n\t        } else {\n\t            this_token = token;\n\t        }\n\t    }\n\t\n\t    data = params || {};\n\t    _url = urlBuilder(this.config.host, this.config.url, url);\n\t    r = request.get(_url);\n\t\n\t    r.set('Authorization', 'Bearer ' + this_token);\n\t    \n\t    if(JSON.stringify(data) !== '{}')\n\t        r.query(data);\n\t    \n\t    r.end(function (err, res){\n\t        handleResponse(err, res, callback);\n\t        callback = null;\n\t    });\n\t}\n\n\n/***/ },\n/* 15 */\n/***/ function(module, exports) {\n\n\t/**\n\t * Created by aclinton on 7/11/16.\n\t */\n\tmodule.exports = function(target){\n\t    for (var i = 1; i < arguments.length; i++) {\n\t        for (var prop in arguments[i]){\n\t            target[prop] = arguments[i][prop];\n\t        }\n\t    }\n\t    return target;\n\t};\n\n\n/***/ }\n/******/ ])\n});\n;\n\n\n/** WEBPACK FOOTER **\n ** rets_rabbit.umd.min.js\n **/"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap dbd5a894ae2d83793b8a\n **/","var RetsRabbit = require('./core'),\n    extend = require('./core/utils/extend');\n\nextend(RetsRabbit.prototype, {\n    \"post\": require('./core/lib/post'),\n    \"get\": require('./core/lib/get'),\n    \"auth\": require('./core/lib/auth'),\n    \"storage\": require('./core/utils/token-storage')\n});\n\nRetsRabbit.utils = {\n    \"extend\": extend,\n    \"domready\": require('domready')\n};\n\nif(RetsRabbit.loaded){\n    setTimeout(function () {\n        RetsRabbit.utils.domready(function () {\n            RetsRabbit.emit('ready');\n        });\n    }, 0);\n}\n\nmodule.exports = RetsRabbit;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/rets_rabbit.js\n ** module id = 0\n ** module chunks = 0\n **/","/**\n * Created by aclinton on 7/11/16.\n */\nvar Emitter = require('component-emitter')\n\nfunction RetsRabbit(config){\n    this.configure(config);\n}\n\nRetsRabbit.debug = true;\nRetsRabbit.loaded = true;\n\n//Set up emitter\nEmitter(RetsRabbit);\nEmitter(RetsRabbit.prototype);\n\nRetsRabbit.prototype.configure = function (cfg) {\n    var config = cfg || {};\n\n    this.config = {\n        clientId: config.client_id || 'retsrabbit',\n        clientSecret: config.client_secret || 'retsrabbit',\n        host: config.host || 'https',\n        url: config.url || 'stage.retsrabbit.com/api',\n        storageKey: config.token_key || 'access_token'\n    };\n\n    if (RetsRabbit.debug) {\n        this.on('error', RetsRabbit.log);\n    }\n\n    this.emit('ready');\n};\n\nRetsRabbit.prototype.clientId = function(str){\n    if (!arguments.length) return this.config.clientId;\n    this.config.clientId = (str ? String(str) : null);\n    return this;\n};\n\nRetsRabbit.prototype.clientSecret = function(str){\n    if (!arguments.length) return this.config.clientSecret;\n    this.config.clientSecret = (str ? String(str) : null);\n    return this;\n};\n\nRetsRabbit.prototype.host = function(str){\n    if (!arguments.length) return this.config.host;\n    this.config.host = (str ? String(str) : null);\n    return this;\n};\n\nRetsRabbit.prototype.url = function(str){\n    if (!arguments.length) return this.config.url;\n    this.config.url = (str ? String(str) : null);\n    return this;\n};\n\nRetsRabbit.prototype.storageKey = function(str){\n    if (!arguments.length) return this.config.storageKey;\n    this.config.storageKey = (str ? String(str) : null);\n    return this;\n};\n\nRetsRabbit.log = function (message) {\n    if(RetsRabbit.debug && window.console){\n        console.log('[Rets Rabbit] ' + message);\n    }\n};\n\nRetsRabbit.ready = function (cb) {\n    if(RetsRabbit.loaded){\n        cb();\n    } else {\n        RetsRabbit.once('ready', cb);\n    }\n};\n\nmodule.exports = RetsRabbit;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/core/index.js\n ** module id = 1\n ** module chunks = 0\n **/","/**\n * Created by aclinton on 7/13/16.\n */\nvar localStorage = null;\nvar RetsRabbit = require('../');\n\nif (typeof (Storage) !== void(0)) {\n    localStorage = window.localStorage;\n}\n\nmodule.exports = {\n    'getToken': function (key) {\n        if(localStorage == null) {\n            RetsRabbit.log(\"Local Storage is not supported by your browser\");\n            return;\n        }\n\n        if(!arguments.length)\n            key = this.config.storageKey;\n\n        return localStorage.getItem(key);\n    },\n    'setToken': function (key, token) {\n        if(localStorage == null) {\n            RetsRabbit.log(\"Local Storage is not supported by your browser\");\n            return;\n        }\n\n        if(arguments.length < 2) {\n            RetsRabbit.log(\"You need to supply both the key and token\");\n            return this;\n        }\n\n        if(key == null)\n            key = this.config.storageKey;\n\n        localStorage.setItem(key, token);\n\n        return;\n    }\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/core/utils/token-storage.js\n ** module id = 2\n ** module chunks = 0\n **/","\r\n/**\r\n * Expose `Emitter`.\r\n */\r\n\r\nif (typeof module !== 'undefined') {\r\n  module.exports = Emitter;\r\n}\r\n\r\n/**\r\n * Initialize a new `Emitter`.\r\n *\r\n * @api public\r\n */\r\n\r\nfunction Emitter(obj) {\r\n  if (obj) return mixin(obj);\r\n};\r\n\r\n/**\r\n * Mixin the emitter properties.\r\n *\r\n * @param {Object} obj\r\n * @return {Object}\r\n * @api private\r\n */\r\n\r\nfunction mixin(obj) {\r\n  for (var key in Emitter.prototype) {\r\n    obj[key] = Emitter.prototype[key];\r\n  }\r\n  return obj;\r\n}\r\n\r\n/**\r\n * Listen on the given `event` with `fn`.\r\n *\r\n * @param {String} event\r\n * @param {Function} fn\r\n * @return {Emitter}\r\n * @api public\r\n */\r\n\r\nEmitter.prototype.on =\r\nEmitter.prototype.addEventListener = function(event, fn){\r\n  this._callbacks = this._callbacks || {};\r\n  (this._callbacks['$' + event] = this._callbacks['$' + event] || [])\r\n    .push(fn);\r\n  return this;\r\n};\r\n\r\n/**\r\n * Adds an `event` listener that will be invoked a single\r\n * time then automatically removed.\r\n *\r\n * @param {String} event\r\n * @param {Function} fn\r\n * @return {Emitter}\r\n * @api public\r\n */\r\n\r\nEmitter.prototype.once = function(event, fn){\r\n  function on() {\r\n    this.off(event, on);\r\n    fn.apply(this, arguments);\r\n  }\r\n\r\n  on.fn = fn;\r\n  this.on(event, on);\r\n  return this;\r\n};\r\n\r\n/**\r\n * Remove the given callback for `event` or all\r\n * registered callbacks.\r\n *\r\n * @param {String} event\r\n * @param {Function} fn\r\n * @return {Emitter}\r\n * @api public\r\n */\r\n\r\nEmitter.prototype.off =\r\nEmitter.prototype.removeListener =\r\nEmitter.prototype.removeAllListeners =\r\nEmitter.prototype.removeEventListener = function(event, fn){\r\n  this._callbacks = this._callbacks || {};\r\n\r\n  // all\r\n  if (0 == arguments.length) {\r\n    this._callbacks = {};\r\n    return this;\r\n  }\r\n\r\n  // specific event\r\n  var callbacks = this._callbacks['$' + event];\r\n  if (!callbacks) return this;\r\n\r\n  // remove all handlers\r\n  if (1 == arguments.length) {\r\n    delete this._callbacks['$' + event];\r\n    return this;\r\n  }\r\n\r\n  // remove specific handler\r\n  var cb;\r\n  for (var i = 0; i < callbacks.length; i++) {\r\n    cb = callbacks[i];\r\n    if (cb === fn || cb.fn === fn) {\r\n      callbacks.splice(i, 1);\r\n      break;\r\n    }\r\n  }\r\n  return this;\r\n};\r\n\r\n/**\r\n * Emit `event` with the given args.\r\n *\r\n * @param {String} event\r\n * @param {Mixed} ...\r\n * @return {Emitter}\r\n */\r\n\r\nEmitter.prototype.emit = function(event){\r\n  this._callbacks = this._callbacks || {};\r\n  var args = [].slice.call(arguments, 1)\r\n    , callbacks = this._callbacks['$' + event];\r\n\r\n  if (callbacks) {\r\n    callbacks = callbacks.slice(0);\r\n    for (var i = 0, len = callbacks.length; i < len; ++i) {\r\n      callbacks[i].apply(this, args);\r\n    }\r\n  }\r\n\r\n  return this;\r\n};\r\n\r\n/**\r\n * Return array of callbacks for `event`.\r\n *\r\n * @param {String} event\r\n * @return {Array}\r\n * @api public\r\n */\r\n\r\nEmitter.prototype.listeners = function(event){\r\n  this._callbacks = this._callbacks || {};\r\n  return this._callbacks['$' + event] || [];\r\n};\r\n\r\n/**\r\n * Check if this emitter has `event` handlers.\r\n *\r\n * @param {String} event\r\n * @return {Boolean}\r\n * @api public\r\n */\r\n\r\nEmitter.prototype.hasListeners = function(event){\r\n  return !! this.listeners(event).length;\r\n};\r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/component-emitter/index.js\n ** module id = 3\n ** module chunks = 0\n **/","/**\n * Module dependencies.\n */\n\nvar Emitter = require('emitter');\nvar reduce = require('reduce');\nvar requestBase = require('./request-base');\nvar isObject = require('./is-object');\n\n/**\n * Root reference for iframes.\n */\n\nvar root;\nif (typeof window !== 'undefined') { // Browser window\n  root = window;\n} else if (typeof self !== 'undefined') { // Web Worker\n  root = self;\n} else { // Other environments\n  root = this;\n}\n\n/**\n * Noop.\n */\n\nfunction noop(){};\n\n/**\n * Expose `request`.\n */\n\nvar request = module.exports = require('./request').bind(null, Request);\n\n/**\n * Determine XHR.\n */\n\nrequest.getXHR = function () {\n  if (root.XMLHttpRequest\n      && (!root.location || 'file:' != root.location.protocol\n          || !root.ActiveXObject)) {\n    return new XMLHttpRequest;\n  } else {\n    try { return new ActiveXObject('Microsoft.XMLHTTP'); } catch(e) {}\n    try { return new ActiveXObject('Msxml2.XMLHTTP.6.0'); } catch(e) {}\n    try { return new ActiveXObject('Msxml2.XMLHTTP.3.0'); } catch(e) {}\n    try { return new ActiveXObject('Msxml2.XMLHTTP'); } catch(e) {}\n  }\n  return false;\n};\n\n/**\n * Removes leading and trailing whitespace, added to support IE.\n *\n * @param {String} s\n * @return {String}\n * @api private\n */\n\nvar trim = ''.trim\n  ? function(s) { return s.trim(); }\n  : function(s) { return s.replace(/(^\\s*|\\s*$)/g, ''); };\n\n/**\n * Serialize the given `obj`.\n *\n * @param {Object} obj\n * @return {String}\n * @api private\n */\n\nfunction serialize(obj) {\n  if (!isObject(obj)) return obj;\n  var pairs = [];\n  for (var key in obj) {\n    if (null != obj[key]) {\n      pushEncodedKeyValuePair(pairs, key, obj[key]);\n    }\n  }\n  return pairs.join('&');\n}\n\n/**\n * Helps 'serialize' with serializing arrays.\n * Mutates the pairs array.\n *\n * @param {Array} pairs\n * @param {String} key\n * @param {Mixed} val\n */\n\nfunction pushEncodedKeyValuePair(pairs, key, val) {\n  if (Array.isArray(val)) {\n    return val.forEach(function(v) {\n      pushEncodedKeyValuePair(pairs, key, v);\n    });\n  } else if (isObject(val)) {\n    for(var subkey in val) {\n      pushEncodedKeyValuePair(pairs, key + '[' + subkey + ']', val[subkey]);\n    }\n    return;\n  }\n  pairs.push(encodeURIComponent(key)\n    + '=' + encodeURIComponent(val));\n}\n\n/**\n * Expose serialization method.\n */\n\n request.serializeObject = serialize;\n\n /**\n  * Parse the given x-www-form-urlencoded `str`.\n  *\n  * @param {String} str\n  * @return {Object}\n  * @api private\n  */\n\nfunction parseString(str) {\n  var obj = {};\n  var pairs = str.split('&');\n  var pair;\n  var pos;\n\n  for (var i = 0, len = pairs.length; i < len; ++i) {\n    pair = pairs[i];\n    pos = pair.indexOf('=');\n    if (pos == -1) {\n      obj[decodeURIComponent(pair)] = '';\n    } else {\n      obj[decodeURIComponent(pair.slice(0, pos))] =\n        decodeURIComponent(pair.slice(pos + 1));\n    }\n  }\n\n  return obj;\n}\n\n/**\n * Expose parser.\n */\n\nrequest.parseString = parseString;\n\n/**\n * Default MIME type map.\n *\n *     superagent.types.xml = 'application/xml';\n *\n */\n\nrequest.types = {\n  html: 'text/html',\n  json: 'application/json',\n  xml: 'application/xml',\n  urlencoded: 'application/x-www-form-urlencoded',\n  'form': 'application/x-www-form-urlencoded',\n  'form-data': 'application/x-www-form-urlencoded'\n};\n\n/**\n * Default serialization map.\n *\n *     superagent.serialize['application/xml'] = function(obj){\n *       return 'generated xml here';\n *     };\n *\n */\n\n request.serialize = {\n   'application/x-www-form-urlencoded': serialize,\n   'application/json': JSON.stringify\n };\n\n /**\n  * Default parsers.\n  *\n  *     superagent.parse['application/xml'] = function(str){\n  *       return { object parsed from str };\n  *     };\n  *\n  */\n\nrequest.parse = {\n  'application/x-www-form-urlencoded': parseString,\n  'application/json': JSON.parse\n};\n\n/**\n * Parse the given header `str` into\n * an object containing the mapped fields.\n *\n * @param {String} str\n * @return {Object}\n * @api private\n */\n\nfunction parseHeader(str) {\n  var lines = str.split(/\\r?\\n/);\n  var fields = {};\n  var index;\n  var line;\n  var field;\n  var val;\n\n  lines.pop(); // trailing CRLF\n\n  for (var i = 0, len = lines.length; i < len; ++i) {\n    line = lines[i];\n    index = line.indexOf(':');\n    field = line.slice(0, index).toLowerCase();\n    val = trim(line.slice(index + 1));\n    fields[field] = val;\n  }\n\n  return fields;\n}\n\n/**\n * Check if `mime` is json or has +json structured syntax suffix.\n *\n * @param {String} mime\n * @return {Boolean}\n * @api private\n */\n\nfunction isJSON(mime) {\n  return /[\\/+]json\\b/.test(mime);\n}\n\n/**\n * Return the mime type for the given `str`.\n *\n * @param {String} str\n * @return {String}\n * @api private\n */\n\nfunction type(str){\n  return str.split(/ *; */).shift();\n};\n\n/**\n * Return header field parameters.\n *\n * @param {String} str\n * @return {Object}\n * @api private\n */\n\nfunction params(str){\n  return reduce(str.split(/ *; */), function(obj, str){\n    var parts = str.split(/ *= */)\n      , key = parts.shift()\n      , val = parts.shift();\n\n    if (key && val) obj[key] = val;\n    return obj;\n  }, {});\n};\n\n/**\n * Initialize a new `Response` with the given `xhr`.\n *\n *  - set flags (.ok, .error, etc)\n *  - parse header\n *\n * Examples:\n *\n *  Aliasing `superagent` as `request` is nice:\n *\n *      request = superagent;\n *\n *  We can use the promise-like API, or pass callbacks:\n *\n *      request.get('/').end(function(res){});\n *      request.get('/', function(res){});\n *\n *  Sending data can be chained:\n *\n *      request\n *        .post('/user')\n *        .send({ name: 'tj' })\n *        .end(function(res){});\n *\n *  Or passed to `.send()`:\n *\n *      request\n *        .post('/user')\n *        .send({ name: 'tj' }, function(res){});\n *\n *  Or passed to `.post()`:\n *\n *      request\n *        .post('/user', { name: 'tj' })\n *        .end(function(res){});\n *\n * Or further reduced to a single call for simple cases:\n *\n *      request\n *        .post('/user', { name: 'tj' }, function(res){});\n *\n * @param {XMLHTTPRequest} xhr\n * @param {Object} options\n * @api private\n */\n\nfunction Response(req, options) {\n  options = options || {};\n  this.req = req;\n  this.xhr = this.req.xhr;\n  // responseText is accessible only if responseType is '' or 'text' and on older browsers\n  this.text = ((this.req.method !='HEAD' && (this.xhr.responseType === '' || this.xhr.responseType === 'text')) || typeof this.xhr.responseType === 'undefined')\n     ? this.xhr.responseText\n     : null;\n  this.statusText = this.req.xhr.statusText;\n  this._setStatusProperties(this.xhr.status);\n  this.header = this.headers = parseHeader(this.xhr.getAllResponseHeaders());\n  // getAllResponseHeaders sometimes falsely returns \"\" for CORS requests, but\n  // getResponseHeader still works. so we get content-type even if getting\n  // other headers fails.\n  this.header['content-type'] = this.xhr.getResponseHeader('content-type');\n  this._setHeaderProperties(this.header);\n  this.body = this.req.method != 'HEAD'\n    ? this._parseBody(this.text ? this.text : this.xhr.response)\n    : null;\n}\n\n/**\n * Get case-insensitive `field` value.\n *\n * @param {String} field\n * @return {String}\n * @api public\n */\n\nResponse.prototype.get = function(field){\n  return this.header[field.toLowerCase()];\n};\n\n/**\n * Set header related properties:\n *\n *   - `.type` the content type without params\n *\n * A response of \"Content-Type: text/plain; charset=utf-8\"\n * will provide you with a `.type` of \"text/plain\".\n *\n * @param {Object} header\n * @api private\n */\n\nResponse.prototype._setHeaderProperties = function(header){\n  // content-type\n  var ct = this.header['content-type'] || '';\n  this.type = type(ct);\n\n  // params\n  var obj = params(ct);\n  for (var key in obj) this[key] = obj[key];\n};\n\n/**\n * Parse the given body `str`.\n *\n * Used for auto-parsing of bodies. Parsers\n * are defined on the `superagent.parse` object.\n *\n * @param {String} str\n * @return {Mixed}\n * @api private\n */\n\nResponse.prototype._parseBody = function(str){\n  var parse = request.parse[this.type];\n  if (!parse && isJSON(this.type)) {\n    parse = request.parse['application/json'];\n  }\n  return parse && str && (str.length || str instanceof Object)\n    ? parse(str)\n    : null;\n};\n\n/**\n * Set flags such as `.ok` based on `status`.\n *\n * For example a 2xx response will give you a `.ok` of __true__\n * whereas 5xx will be __false__ and `.error` will be __true__. The\n * `.clientError` and `.serverError` are also available to be more\n * specific, and `.statusType` is the class of error ranging from 1..5\n * sometimes useful for mapping respond colors etc.\n *\n * \"sugar\" properties are also defined for common cases. Currently providing:\n *\n *   - .noContent\n *   - .badRequest\n *   - .unauthorized\n *   - .notAcceptable\n *   - .notFound\n *\n * @param {Number} status\n * @api private\n */\n\nResponse.prototype._setStatusProperties = function(status){\n  // handle IE9 bug: http://stackoverflow.com/questions/10046972/msie-returns-status-code-of-1223-for-ajax-request\n  if (status === 1223) {\n    status = 204;\n  }\n\n  var type = status / 100 | 0;\n\n  // status / class\n  this.status = this.statusCode = status;\n  this.statusType = type;\n\n  // basics\n  this.info = 1 == type;\n  this.ok = 2 == type;\n  this.clientError = 4 == type;\n  this.serverError = 5 == type;\n  this.error = (4 == type || 5 == type)\n    ? this.toError()\n    : false;\n\n  // sugar\n  this.accepted = 202 == status;\n  this.noContent = 204 == status;\n  this.badRequest = 400 == status;\n  this.unauthorized = 401 == status;\n  this.notAcceptable = 406 == status;\n  this.notFound = 404 == status;\n  this.forbidden = 403 == status;\n};\n\n/**\n * Return an `Error` representative of this response.\n *\n * @return {Error}\n * @api public\n */\n\nResponse.prototype.toError = function(){\n  var req = this.req;\n  var method = req.method;\n  var url = req.url;\n\n  var msg = 'cannot ' + method + ' ' + url + ' (' + this.status + ')';\n  var err = new Error(msg);\n  err.status = this.status;\n  err.method = method;\n  err.url = url;\n\n  return err;\n};\n\n/**\n * Expose `Response`.\n */\n\nrequest.Response = Response;\n\n/**\n * Initialize a new `Request` with the given `method` and `url`.\n *\n * @param {String} method\n * @param {String} url\n * @api public\n */\n\nfunction Request(method, url) {\n  var self = this;\n  this._query = this._query || [];\n  this.method = method;\n  this.url = url;\n  this.header = {}; // preserves header name case\n  this._header = {}; // coerces header names to lowercase\n  this.on('end', function(){\n    var err = null;\n    var res = null;\n\n    try {\n      res = new Response(self);\n    } catch(e) {\n      err = new Error('Parser is unable to parse the response');\n      err.parse = true;\n      err.original = e;\n      // issue #675: return the raw response if the response parsing fails\n      err.rawResponse = self.xhr && self.xhr.responseText ? self.xhr.responseText : null;\n      // issue #876: return the http status code if the response parsing fails\n      err.statusCode = self.xhr && self.xhr.status ? self.xhr.status : null;\n      return self.callback(err);\n    }\n\n    self.emit('response', res);\n\n    if (err) {\n      return self.callback(err, res);\n    }\n\n    try {\n      if (res.status >= 200 && res.status < 300) {\n        return self.callback(err, res);\n      }\n\n      var new_err = new Error(res.statusText || 'Unsuccessful HTTP response');\n      new_err.original = err;\n      new_err.response = res;\n      new_err.status = res.status;\n\n      self.callback(new_err, res);\n    } catch(e) {\n      self.callback(e); // #985 touching res may cause INVALID_STATE_ERR on old Android\n    }\n  });\n}\n\n/**\n * Mixin `Emitter` and `requestBase`.\n */\n\nEmitter(Request.prototype);\nfor (var key in requestBase) {\n  Request.prototype[key] = requestBase[key];\n}\n\n/**\n * Set Content-Type to `type`, mapping values from `request.types`.\n *\n * Examples:\n *\n *      superagent.types.xml = 'application/xml';\n *\n *      request.post('/')\n *        .type('xml')\n *        .send(xmlstring)\n *        .end(callback);\n *\n *      request.post('/')\n *        .type('application/xml')\n *        .send(xmlstring)\n *        .end(callback);\n *\n * @param {String} type\n * @return {Request} for chaining\n * @api public\n */\n\nRequest.prototype.type = function(type){\n  this.set('Content-Type', request.types[type] || type);\n  return this;\n};\n\n/**\n * Set responseType to `val`. Presently valid responseTypes are 'blob' and\n * 'arraybuffer'.\n *\n * Examples:\n *\n *      req.get('/')\n *        .responseType('blob')\n *        .end(callback);\n *\n * @param {String} val\n * @return {Request} for chaining\n * @api public\n */\n\nRequest.prototype.responseType = function(val){\n  this._responseType = val;\n  return this;\n};\n\n/**\n * Set Accept to `type`, mapping values from `request.types`.\n *\n * Examples:\n *\n *      superagent.types.json = 'application/json';\n *\n *      request.get('/agent')\n *        .accept('json')\n *        .end(callback);\n *\n *      request.get('/agent')\n *        .accept('application/json')\n *        .end(callback);\n *\n * @param {String} accept\n * @return {Request} for chaining\n * @api public\n */\n\nRequest.prototype.accept = function(type){\n  this.set('Accept', request.types[type] || type);\n  return this;\n};\n\n/**\n * Set Authorization field value with `user` and `pass`.\n *\n * @param {String} user\n * @param {String} pass\n * @param {Object} options with 'type' property 'auto' or 'basic' (default 'basic')\n * @return {Request} for chaining\n * @api public\n */\n\nRequest.prototype.auth = function(user, pass, options){\n  if (!options) {\n    options = {\n      type: 'basic'\n    }\n  }\n\n  switch (options.type) {\n    case 'basic':\n      var str = btoa(user + ':' + pass);\n      this.set('Authorization', 'Basic ' + str);\n    break;\n\n    case 'auto':\n      this.username = user;\n      this.password = pass;\n    break;\n  }\n  return this;\n};\n\n/**\n* Add query-string `val`.\n*\n* Examples:\n*\n*   request.get('/shoes')\n*     .query('size=10')\n*     .query({ color: 'blue' })\n*\n* @param {Object|String} val\n* @return {Request} for chaining\n* @api public\n*/\n\nRequest.prototype.query = function(val){\n  if ('string' != typeof val) val = serialize(val);\n  if (val) this._query.push(val);\n  return this;\n};\n\n/**\n * Queue the given `file` as an attachment to the specified `field`,\n * with optional `filename`.\n *\n * ``` js\n * request.post('/upload')\n *   .attach('content', new Blob(['<a id=\"a\"><b id=\"b\">hey!</b></a>'], { type: \"text/html\"}))\n *   .end(callback);\n * ```\n *\n * @param {String} field\n * @param {Blob|File} file\n * @param {String} filename\n * @return {Request} for chaining\n * @api public\n */\n\nRequest.prototype.attach = function(field, file, filename){\n  this._getFormData().append(field, file, filename || file.name);\n  return this;\n};\n\nRequest.prototype._getFormData = function(){\n  if (!this._formData) {\n    this._formData = new root.FormData();\n  }\n  return this._formData;\n};\n\n/**\n * Invoke the callback with `err` and `res`\n * and handle arity check.\n *\n * @param {Error} err\n * @param {Response} res\n * @api private\n */\n\nRequest.prototype.callback = function(err, res){\n  var fn = this._callback;\n  this.clearTimeout();\n  fn(err, res);\n};\n\n/**\n * Invoke callback with x-domain error.\n *\n * @api private\n */\n\nRequest.prototype.crossDomainError = function(){\n  var err = new Error('Request has been terminated\\nPossible causes: the network is offline, Origin is not allowed by Access-Control-Allow-Origin, the page is being unloaded, etc.');\n  err.crossDomain = true;\n\n  err.status = this.status;\n  err.method = this.method;\n  err.url = this.url;\n\n  this.callback(err);\n};\n\n/**\n * Invoke callback with timeout error.\n *\n * @api private\n */\n\nRequest.prototype._timeoutError = function(){\n  var timeout = this._timeout;\n  var err = new Error('timeout of ' + timeout + 'ms exceeded');\n  err.timeout = timeout;\n  this.callback(err);\n};\n\n/**\n * Compose querystring to append to req.url\n *\n * @api private\n */\n\nRequest.prototype._appendQueryString = function(){\n  var query = this._query.join('&');\n  if (query) {\n    this.url += ~this.url.indexOf('?')\n      ? '&' + query\n      : '?' + query;\n  }\n};\n\n/**\n * Initiate request, invoking callback `fn(res)`\n * with an instanceof `Response`.\n *\n * @param {Function} fn\n * @return {Request} for chaining\n * @api public\n */\n\nRequest.prototype.end = function(fn){\n  var self = this;\n  var xhr = this.xhr = request.getXHR();\n  var timeout = this._timeout;\n  var data = this._formData || this._data;\n\n  // store callback\n  this._callback = fn || noop;\n\n  // state change\n  xhr.onreadystatechange = function(){\n    if (4 != xhr.readyState) return;\n\n    // In IE9, reads to any property (e.g. status) off of an aborted XHR will\n    // result in the error \"Could not complete the operation due to error c00c023f\"\n    var status;\n    try { status = xhr.status } catch(e) { status = 0; }\n\n    if (0 == status) {\n      if (self.timedout) return self._timeoutError();\n      if (self._aborted) return;\n      return self.crossDomainError();\n    }\n    self.emit('end');\n  };\n\n  // progress\n  var handleProgress = function(e){\n    if (e.total > 0) {\n      e.percent = e.loaded / e.total * 100;\n    }\n    e.direction = 'download';\n    self.emit('progress', e);\n  };\n  if (this.hasListeners('progress')) {\n    xhr.onprogress = handleProgress;\n  }\n  try {\n    if (xhr.upload && this.hasListeners('progress')) {\n      xhr.upload.onprogress = handleProgress;\n    }\n  } catch(e) {\n    // Accessing xhr.upload fails in IE from a web worker, so just pretend it doesn't exist.\n    // Reported here:\n    // https://connect.microsoft.com/IE/feedback/details/837245/xmlhttprequest-upload-throws-invalid-argument-when-used-from-web-worker-context\n  }\n\n  // timeout\n  if (timeout && !this._timer) {\n    this._timer = setTimeout(function(){\n      self.timedout = true;\n      self.abort();\n    }, timeout);\n  }\n\n  // querystring\n  this._appendQueryString();\n\n  // initiate request\n  if (this.username && this.password) {\n    xhr.open(this.method, this.url, true, this.username, this.password);\n  } else {\n    xhr.open(this.method, this.url, true);\n  }\n\n  // CORS\n  if (this._withCredentials) xhr.withCredentials = true;\n\n  // body\n  if ('GET' != this.method && 'HEAD' != this.method && 'string' != typeof data && !this._isHost(data)) {\n    // serialize stuff\n    var contentType = this._header['content-type'];\n    var serialize = this._serializer || request.serialize[contentType ? contentType.split(';')[0] : ''];\n    if (!serialize && isJSON(contentType)) serialize = request.serialize['application/json'];\n    if (serialize) data = serialize(data);\n  }\n\n  // set header fields\n  for (var field in this.header) {\n    if (null == this.header[field]) continue;\n    xhr.setRequestHeader(field, this.header[field]);\n  }\n\n  if (this._responseType) {\n    xhr.responseType = this._responseType;\n  }\n\n  // send stuff\n  this.emit('request', this);\n\n  // IE11 xhr.send(undefined) sends 'undefined' string as POST payload (instead of nothing)\n  // We need null here if data is undefined\n  xhr.send(typeof data !== 'undefined' ? data : null);\n  return this;\n};\n\n\n/**\n * Expose `Request`.\n */\n\nrequest.Request = Request;\n\n/**\n * GET `url` with optional callback `fn(res)`.\n *\n * @param {String} url\n * @param {Mixed|Function} data or fn\n * @param {Function} fn\n * @return {Request}\n * @api public\n */\n\nrequest.get = function(url, data, fn){\n  var req = request('GET', url);\n  if ('function' == typeof data) fn = data, data = null;\n  if (data) req.query(data);\n  if (fn) req.end(fn);\n  return req;\n};\n\n/**\n * HEAD `url` with optional callback `fn(res)`.\n *\n * @param {String} url\n * @param {Mixed|Function} data or fn\n * @param {Function} fn\n * @return {Request}\n * @api public\n */\n\nrequest.head = function(url, data, fn){\n  var req = request('HEAD', url);\n  if ('function' == typeof data) fn = data, data = null;\n  if (data) req.send(data);\n  if (fn) req.end(fn);\n  return req;\n};\n\n/**\n * OPTIONS query to `url` with optional callback `fn(res)`.\n *\n * @param {String} url\n * @param {Mixed|Function} data or fn\n * @param {Function} fn\n * @return {Request}\n * @api public\n */\n\nrequest.options = function(url, data, fn){\n  var req = request('OPTIONS', url);\n  if ('function' == typeof data) fn = data, data = null;\n  if (data) req.send(data);\n  if (fn) req.end(fn);\n  return req;\n};\n\n/**\n * DELETE `url` with optional callback `fn(res)`.\n *\n * @param {String} url\n * @param {Function} fn\n * @return {Request}\n * @api public\n */\n\nfunction del(url, fn){\n  var req = request('DELETE', url);\n  if (fn) req.end(fn);\n  return req;\n};\n\nrequest['del'] = del;\nrequest['delete'] = del;\n\n/**\n * PATCH `url` with optional `data` and callback `fn(res)`.\n *\n * @param {String} url\n * @param {Mixed} data\n * @param {Function} fn\n * @return {Request}\n * @api public\n */\n\nrequest.patch = function(url, data, fn){\n  var req = request('PATCH', url);\n  if ('function' == typeof data) fn = data, data = null;\n  if (data) req.send(data);\n  if (fn) req.end(fn);\n  return req;\n};\n\n/**\n * POST `url` with optional `data` and callback `fn(res)`.\n *\n * @param {String} url\n * @param {Mixed} data\n * @param {Function} fn\n * @return {Request}\n * @api public\n */\n\nrequest.post = function(url, data, fn){\n  var req = request('POST', url);\n  if ('function' == typeof data) fn = data, data = null;\n  if (data) req.send(data);\n  if (fn) req.end(fn);\n  return req;\n};\n\n/**\n * PUT `url` with optional `data` and callback `fn(res)`.\n *\n * @param {String} url\n * @param {Mixed|Function} data or fn\n * @param {Function} fn\n * @return {Request}\n * @api public\n */\n\nrequest.put = function(url, data, fn){\n  var req = request('PUT', url);\n  if ('function' == typeof data) fn = data, data = null;\n  if (data) req.send(data);\n  if (fn) req.end(fn);\n  return req;\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/superagent/lib/client.js\n ** module id = 4\n ** module chunks = 0\n **/","/**\n * Check if `obj` is an object.\n *\n * @param {Object} obj\n * @return {Boolean}\n * @api private\n */\n\nfunction isObject(obj) {\n  return null !== obj && 'object' === typeof obj;\n}\n\nmodule.exports = isObject;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/superagent/lib/is-object.js\n ** module id = 5\n ** module chunks = 0\n **/","/**\n * Created by aclinton on 7/11/16.\n */\n\nmodule.exports = function (host, domain, target) {\n    var url = host + \"://\";\n    url += domain;\n\n    //remove trailing slash from domain\n    if (url.substr(url.length - 1) === '/')\n        url = url.slice(0, -1);\n\n    //add forward slash to target\n    if(target.substr(target.length - 1) !== '/')\n        target += '/';\n\n    url += target;\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/core/helpers/build-url.js\n ** module id = 6\n ** module chunks = 0\n **/","/**\n * Created by aclinton on 7/11/16.\n */\nmodule.exports = function (err, res, callback) {\n    var cb = callback || function() {};\n\n    if(res && !res.ok){\n        var is_err = res.body && res.body.error_code;\n        err = new Error(is_err ? res.body.message : 'Unknown error occurred');\n        err.code = is_err ? res.body.error_code : 'UnknownError';\n    }\n\n    if(err){\n        cb(err, null);\n    } else {\n        cb(null, res.body);\n    }\n\n    return;\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/core/helpers/superagent-handle-response.js\n ** module id = 7\n ** module chunks = 0\n **/","/**\n * Created by aclinton on 7/11/16.\n */\nvar request = require('superagent'),\n    handleResponse = require('../helpers/superagent-handle-response');\n\nmodule.exports = function (url, data, token, cb) {\n    var r = request.post(url).send(data || {});\n\n    if(token) {\n        r.set('Authorization', 'Bearer ' + token);\n    }\n\n    r.end(function (err, res) {\n        handleResponse(err, res, cb);\n        cb = null;\n    });\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/core/lib/post.js\n ** module id = 8\n ** module chunks = 0\n **/","/*!\n  * domready (c) Dustin Diaz 2014 - License MIT\n  */\n!function (name, definition) {\n\n  if (typeof module != 'undefined') module.exports = definition()\n  else if (typeof define == 'function' && typeof define.amd == 'object') define(definition)\n  else this[name] = definition()\n\n}('domready', function () {\n\n  var fns = [], listener\n    , doc = document\n    , hack = doc.documentElement.doScroll\n    , domContentLoaded = 'DOMContentLoaded'\n    , loaded = (hack ? /^loaded|^c/ : /^loaded|^i|^c/).test(doc.readyState)\n\n\n  if (!loaded)\n  doc.addEventListener(domContentLoaded, listener = function () {\n    doc.removeEventListener(domContentLoaded, listener)\n    loaded = 1\n    while (listener = fns.shift()) listener()\n  })\n\n  return function (fn) {\n    loaded ? setTimeout(fn, 0) : fns.push(fn)\n  }\n\n});\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/domready/ready.js\n ** module id = 9\n ** module chunks = 0\n **/","\n/**\n * Reduce `arr` with `fn`.\n *\n * @param {Array} arr\n * @param {Function} fn\n * @param {Mixed} initial\n *\n * TODO: combatible error handling?\n */\n\nmodule.exports = function(arr, fn, initial){  \n  var idx = 0;\n  var len = arr.length;\n  var curr = arguments.length == 3\n    ? initial\n    : arr[idx++];\n\n  while (idx < len) {\n    curr = fn.call(null, curr, arr[idx], ++idx, arr);\n  }\n  \n  return curr;\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/reduce-component/index.js\n ** module id = 10\n ** module chunks = 0\n **/","/**\n * Module of mixed-in functions shared between node and client code\n */\nvar isObject = require('./is-object');\n\n/**\n * Clear previous timeout.\n *\n * @return {Request} for chaining\n * @api public\n */\n\nexports.clearTimeout = function _clearTimeout(){\n  this._timeout = 0;\n  clearTimeout(this._timer);\n  return this;\n};\n\n/**\n * Override default response body parser\n *\n * This function will be called to convert incoming data into request.body\n *\n * @param {Function}\n * @api public\n */\n\nexports.parse = function parse(fn){\n  this._parser = fn;\n  return this;\n};\n\n/**\n * Override default request body serializer\n *\n * This function will be called to convert data set via .send or .attach into payload to send\n *\n * @param {Function}\n * @api public\n */\n\nexports.serialize = function serialize(fn){\n  this._serializer = fn;\n  return this;\n};\n\n/**\n * Set timeout to `ms`.\n *\n * @param {Number} ms\n * @return {Request} for chaining\n * @api public\n */\n\nexports.timeout = function timeout(ms){\n  this._timeout = ms;\n  return this;\n};\n\n/**\n * Promise support\n *\n * @param {Function} resolve\n * @param {Function} reject\n * @return {Request}\n */\n\nexports.then = function then(resolve, reject) {\n  if (!this._fullfilledPromise) {\n    var self = this;\n    this._fullfilledPromise = new Promise(function(innerResolve, innerReject){\n      self.end(function(err, res){\n        if (err) innerReject(err); else innerResolve(res);\n      });\n    });\n  }\n  return this._fullfilledPromise.then(resolve, reject);\n}\n\n/**\n * Allow for extension\n */\n\nexports.use = function use(fn) {\n  fn(this);\n  return this;\n}\n\n\n/**\n * Get request header `field`.\n * Case-insensitive.\n *\n * @param {String} field\n * @return {String}\n * @api public\n */\n\nexports.get = function(field){\n  return this._header[field.toLowerCase()];\n};\n\n/**\n * Get case-insensitive header `field` value.\n * This is a deprecated internal API. Use `.get(field)` instead.\n *\n * (getHeader is no longer used internally by the superagent code base)\n *\n * @param {String} field\n * @return {String}\n * @api private\n * @deprecated\n */\n\nexports.getHeader = exports.get;\n\n/**\n * Set header `field` to `val`, or multiple fields with one object.\n * Case-insensitive.\n *\n * Examples:\n *\n *      req.get('/')\n *        .set('Accept', 'application/json')\n *        .set('X-API-Key', 'foobar')\n *        .end(callback);\n *\n *      req.get('/')\n *        .set({ Accept: 'application/json', 'X-API-Key': 'foobar' })\n *        .end(callback);\n *\n * @param {String|Object} field\n * @param {String} val\n * @return {Request} for chaining\n * @api public\n */\n\nexports.set = function(field, val){\n  if (isObject(field)) {\n    for (var key in field) {\n      this.set(key, field[key]);\n    }\n    return this;\n  }\n  this._header[field.toLowerCase()] = val;\n  this.header[field] = val;\n  return this;\n};\n\n/**\n * Remove header `field`.\n * Case-insensitive.\n *\n * Example:\n *\n *      req.get('/')\n *        .unset('User-Agent')\n *        .end(callback);\n *\n * @param {String} field\n */\nexports.unset = function(field){\n  delete this._header[field.toLowerCase()];\n  delete this.header[field];\n  return this;\n};\n\n/**\n * Write the field `name` and `val` for \"multipart/form-data\"\n * request bodies.\n *\n * ``` js\n * request.post('/upload')\n *   .field('foo', 'bar')\n *   .end(callback);\n * ```\n *\n * @param {String} name\n * @param {String|Blob|File|Buffer|fs.ReadStream} val\n * @return {Request} for chaining\n * @api public\n */\nexports.field = function(name, val) {\n  this._getFormData().append(name, val);\n  return this;\n};\n\n/**\n * Abort the request, and clear potential timeout.\n *\n * @return {Request}\n * @api public\n */\nexports.abort = function(){\n  if (this._aborted) {\n    return this;\n  }\n  this._aborted = true;\n  this.xhr && this.xhr.abort(); // browser\n  this.req && this.req.abort(); // node\n  this.clearTimeout();\n  this.emit('abort');\n  return this;\n};\n\n/**\n * Enable transmission of cookies with x-domain requests.\n *\n * Note that for this to work the origin must not be\n * using \"Access-Control-Allow-Origin\" with a wildcard,\n * and also must set \"Access-Control-Allow-Credentials\"\n * to \"true\".\n *\n * @api public\n */\n\nexports.withCredentials = function(){\n  // This is browser-only functionality. Node side is no-op.\n  this._withCredentials = true;\n  return this;\n};\n\n/**\n * Set the max redirects to `n`. Does noting in browser XHR implementation.\n *\n * @param {Number} n\n * @return {Request} for chaining\n * @api public\n */\n\nexports.redirects = function(n){\n  this._maxRedirects = n;\n  return this;\n};\n\n/**\n * Convert to a plain javascript object (not JSON string) of scalar properties.\n * Note as this method is designed to return a useful non-this value,\n * it cannot be chained.\n *\n * @return {Object} describing method, url, and data of this request\n * @api public\n */\n\nexports.toJSON = function(){\n  return {\n    method: this.method,\n    url: this.url,\n    data: this._data\n  };\n};\n\n/**\n * Check if `obj` is a host object,\n * we don't want to serialize these :)\n *\n * TODO: future proof, move to compoent land\n *\n * @param {Object} obj\n * @return {Boolean}\n * @api private\n */\n\nexports._isHost = function _isHost(obj) {\n  var str = {}.toString.call(obj);\n\n  switch (str) {\n    case '[object File]':\n    case '[object Blob]':\n    case '[object FormData]':\n      return true;\n    default:\n      return false;\n  }\n}\n\n/**\n * Send `data` as the request body, defaulting the `.type()` to \"json\" when\n * an object is given.\n *\n * Examples:\n *\n *       // manual json\n *       request.post('/user')\n *         .type('json')\n *         .send('{\"name\":\"tj\"}')\n *         .end(callback)\n *\n *       // auto json\n *       request.post('/user')\n *         .send({ name: 'tj' })\n *         .end(callback)\n *\n *       // manual x-www-form-urlencoded\n *       request.post('/user')\n *         .type('form')\n *         .send('name=tj')\n *         .end(callback)\n *\n *       // auto x-www-form-urlencoded\n *       request.post('/user')\n *         .type('form')\n *         .send({ name: 'tj' })\n *         .end(callback)\n *\n *       // defaults to x-www-form-urlencoded\n *      request.post('/user')\n *        .send('name=tobi')\n *        .send('species=ferret')\n *        .end(callback)\n *\n * @param {String|Object} data\n * @return {Request} for chaining\n * @api public\n */\n\nexports.send = function(data){\n  var obj = isObject(data);\n  var type = this._header['content-type'];\n\n  // merge\n  if (obj && isObject(this._data)) {\n    for (var key in data) {\n      this._data[key] = data[key];\n    }\n  } else if ('string' == typeof data) {\n    // default to x-www-form-urlencoded\n    if (!type) this.type('form');\n    type = this._header['content-type'];\n    if ('application/x-www-form-urlencoded' == type) {\n      this._data = this._data\n        ? this._data + '&' + data\n        : data;\n    } else {\n      this._data = (this._data || '') + data;\n    }\n  } else {\n    this._data = data;\n  }\n\n  if (!obj || this._isHost(data)) return this;\n\n  // default to json\n  if (!type) this.type('json');\n  return this;\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/superagent/lib/request-base.js\n ** module id = 11\n ** module chunks = 0\n **/","// The node and browser modules expose versions of this with the\n// appropriate constructor function bound as first argument\n/**\n * Issue a request:\n *\n * Examples:\n *\n *    request('GET', '/users').end(callback)\n *    request('/users').end(callback)\n *    request('/users', callback)\n *\n * @param {String} method\n * @param {String|Function} url or callback\n * @return {Request}\n * @api public\n */\n\nfunction request(RequestConstructor, method, url) {\n  // callback\n  if ('function' == typeof url) {\n    return new RequestConstructor('GET', method).end(url);\n  }\n\n  // url first\n  if (2 == arguments.length) {\n    return new RequestConstructor('GET', method);\n  }\n\n  return new RequestConstructor(method, url);\n}\n\nmodule.exports = request;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/superagent/lib/request.js\n ** module id = 12\n ** module chunks = 0\n **/","/**\n * Created by aclinton on 7/11/16.\n */\nvar post = require('./post'),\n    urlBuilder = require('../helpers/build-url'),\n    Storage = require('../utils/token-storage');\n\nmodule.exports = function (cb) {\n    var data = {\n        grant_type: \"client_credentials\",\n        client_id: this.config.clientId,\n        client_secret: this.config.clientSecret\n    };\n\n    var key = this.config.storageKey;\n\n    var url = urlBuilder(this.config.host, this.config.url, '/oauth/access_token');\n    \n    post(url, data, null, function (err, res){\n        if(err){\n            cb(err, null);\n        } else {\n            var t = res.access_token;\n            Storage.setToken(key, t);\n            cb(null, res);\n        }\n    });\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/core/lib/auth.js\n ** module id = 13\n ** module chunks = 0\n **/","/**\n * Created by aclinton on 7/11/16.\n */\nvar request = require('superagent'),\n    handleResponse = require('../helpers/superagent-handle-response'),\n    urlBuilder = require('../helpers/build-url'),\n    Storage = require('../utils/token-storage'),\n    RetsRabbit = require('../');\n\nmodule.exports = function (url, params, token, callback) {\n    var this_token, data, _url, r;\n\n    if(arguments.length < 4){\n        RetsRabbit.log(\"Not enough arguments supplied to the method get()\");\n        return;\n    } else {\n        if(token == null || typeof token !== 'string') {\n            this_token = Storage.getToken(this.config.storageKey);\n        } else {\n            this_token = token;\n        }\n    }\n\n    data = params || {};\n    _url = urlBuilder(this.config.host, this.config.url, url);\n    r = request.get(_url);\n\n    r.set('Authorization', 'Bearer ' + this_token);\n    \n    if(JSON.stringify(data) !== '{}')\n        r.query(data);\n    \n    r.end(function (err, res){\n        handleResponse(err, res, callback);\n        callback = null;\n    });\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/core/lib/get.js\n ** module id = 14\n ** module chunks = 0\n **/","/**\n * Created by aclinton on 7/11/16.\n */\nmodule.exports = function(target){\n    for (var i = 1; i < arguments.length; i++) {\n        for (var prop in arguments[i]){\n            target[prop] = arguments[i][prop];\n        }\n    }\n    return target;\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/core/utils/extend.js\n ** module id = 15\n ** module chunks = 0\n **/"],"sourceRoot":""}